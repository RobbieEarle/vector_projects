import numpy as np
import hyper_params_nparam as nparam


def get_hyper_params(args, model, dataset, actfun, rng=None, exp='', p=1):

    if args.perm_method == 'invert':
        actfun += '_inv'

    if model == 'nn' or model == 'mlp':
        if dataset == 'mnist':
            if exp == 'nparam':
                if p == 1:
                    return nparam.nn_mnist_p1(rng)[actfun]
                elif p == 3:
                    return nparam.nn_mnist_p3(rng)[actfun]
            else:
                return nn_mnist(rng)[actfun]
        elif dataset == 'cifar10':
            if exp == 'nparam':
                if p == 1:
                    return nparam.nn_cifar10_p1(rng)[actfun]
                elif p == 3:
                    return nparam.nn_cifar10_p3(rng)[actfun]
            else:
                return nn_cifar10(rng)[actfun]
        elif dataset == 'cifar100':
            if exp == 'nparam':
                if p == 1:
                    return nparam.nn_cifar100_p1(rng)[actfun]
                elif p == 3:
                    return nparam.nn_cifar100_p3(rng)[actfun]
            else:
                return nn_cifar100(rng)[actfun]
        elif dataset == 'fashion_mnist':
            return nn_fashion_mnist(rng)[actfun]
        elif dataset == 'svhn':
            return nn_svhn(rng)[actfun]
    elif model == 'cnn':
        if dataset == 'mnist':
            if exp == 'nparam':
                if p == 1:
                    return nparam.cnn_mnist_p1(rng)[actfun]
                elif p == 3:
                    return nparam.cnn_mnist_p3(rng)[actfun]
            else:
                return cnn_mnist(rng)[actfun]
        elif dataset == 'cifar10':
            if exp == 'nparam':
                if p == 1:
                    return nparam.cnn_cifar10_p1(rng)[actfun]
                elif p == 3:
                    return nparam.cnn_cifar10_p3(rng)[actfun]
            else:
                return cnn_cifar10(rng)[actfun]
        elif dataset == 'cifar100':
            if exp == 'nparam':
                if p == 1:
                    return nparam.cnn_cifar100_p1(rng)[actfun]
                elif p == 3:
                    return nparam.cnn_cifar100_p3(rng)[actfun]
            else:
                return cnn_cifar100(rng)[actfun]
        elif dataset == 'fashion_mnist':
            return cnn_fashion_mnist(rng)[actfun]
        elif dataset == 'svhn':
            return cnn_svhn(rng)[actfun]
    elif model == 'resnet' or model == 'dawnnet':
        if dataset == 'mnist':
            return resnet_mnist(rng)[actfun]
        elif dataset == 'cifar10':
            return resnet_cifar10(rng)[actfun]
        elif dataset == 'cifar100':
            return resnet_cifar100(rng)[actfun]
    else:
        raise ValueError("Error: No hyper-parameters found for {}, {}".format(model, dataset))


def temp_resnet_cifar100():
    return {
        "max0": {
            "adam_beta_1": np.power(10., -1.891),
            "adam_beta_2": np.power(10., -0.628),
            "adam_eps": np.power(10., -7.962),
            "adam_wd": np.power(10., -3.985),
            "max_lr": np.power(10., -3.352),
            "cycle_peak": 0.32,
        },
        "max1": {
            "adam_beta_1": np.power(10., -2.279),
            "adam_beta_2": np.power(10., -1.179),
            "adam_eps": np.power(10., -8.279),
            "adam_wd": np.power(10., -3.921),
            "max_lr": np.power(10., -3.33),
            "cycle_peak": 0.38,
        },
        "max2": {
            "adam_beta_1": np.power(10., -2.252),
            "adam_beta_2": np.power(10., -1.079),
            "adam_eps": np.power(10., -7.949),
            "adam_wd": np.power(10., -3.923),
            "max_lr": np.power(10., -3.316),
            "cycle_peak": 0.42,
        },
        "max3": {
            "adam_beta_1": np.power(10., -2.152),
            "adam_beta_2": np.power(10., -1.158),
            "adam_eps": np.power(10., -8.025),
            "adam_wd": np.power(10., -4.065),
            "max_lr": np.power(10., -3.326),
            "cycle_peak": 0.36,
        },
        "max4": {
            "adam_beta_1": np.power(10., -1.938),
            "adam_beta_2": np.power(10., -1.117),
            "adam_eps": np.power(10., -8.523),
            "adam_wd": np.power(10., -3.932),
            "max_lr": np.power(10., -3.311),
            "cycle_peak": 0.41,
        },
        "relu0": {
            "adam_beta_1": np.power(10., -1.617),
            "adam_beta_2": np.power(10., -0.608),
            "adam_eps": np.power(10., -8.876),
            "adam_wd": np.power(10., -4.475),
            "max_lr": np.power(10., -3.588),
            "cycle_peak": 0.2,
        },
        "relu1": {
            "adam_beta_1": np.power(10., -1.244),
            "adam_beta_2": np.power(10., -0.736),
            "adam_eps": np.power(10., -8.698),
            "adam_wd": np.power(10., -4.397),
            "max_lr": np.power(10., -3.604),
            "cycle_peak": 0.2,
        },
        "relu2": {
            "adam_beta_1": np.power(10., -1.969),
            "adam_beta_2": np.power(10., -0.895),
            "adam_eps": np.power(10., -8.622),
            "adam_wd": np.power(10., -4.043),
            "max_lr": np.power(10., -3.574),
            "cycle_peak": 0.23,
        },
        "relu3": {
            "adam_beta_1": np.power(10., -0.854),
            "adam_beta_2": np.power(10., -0.787),
            "adam_eps": np.power(10., -8.971),
            "adam_wd": np.power(10., -4.379),
            "max_lr": np.power(10., -3.611),
            "cycle_peak": 0.21,
        },
        "relu4": {
            "adam_beta_1": np.power(10., -1.507),
            "adam_beta_2": np.power(10., -0.755),
            "adam_eps": np.power(10., -8.933),
            "adam_wd": np.power(10., -3.953),
            "max_lr": np.power(10., -3.619),
            "cycle_peak": 0.22,
        },
    }


def nn_mnist(rng):
    return {
        "relu": {"adam_beta_1": np.exp(-2.375018573261741),
                 "adam_beta_2": np.exp(-6.565065478550015),
                 "adam_eps": np.exp(-19.607731090387627),
                 "adam_wd": np.exp(-11.86635747404571),
                 "max_lr": np.exp(-5.7662952418075175),
                 "cycle_peak": 0.2935155263985412
                 },
        "cf_relu": {"adam_beta_1": np.exp(-4.44857338551192),
                    "adam_beta_2": np.exp(-4.669825410890087),
                    "adam_eps": np.exp(-17.69933166220988),
                    "adam_wd": np.exp(-12.283288733512373),
                    "max_lr": np.exp(-8.563504990329884),
                    "cycle_peak": 0.10393251332079881
                    },
        "multi_relu": {"adam_beta_1": np.exp(-2.859441513546877),
                       "adam_beta_2": np.exp(-5.617992566623951),
                       "adam_eps": np.exp(-20.559015044774018),
                       "adam_wd": np.exp(-12.693844976989661),
                       "max_lr": np.exp(-5.802816398828524),
                       "cycle_peak": 0.28499869111025217
                       },
        "combinact": {"adam_beta_1": np.exp(-2.6436039683427253),
                      "adam_beta_2": np.exp(-7.371516988658699),
                      "adam_eps": np.exp(-16.989022147994522),
                      "adam_wd": np.exp(-12.113778466374383),
                      "max_lr": np.exp(-8),
                      "cycle_peak": 0.4661308739740898
                      },
        "l2": {"adam_beta_1": np.exp(-2.244614412525641),
               "adam_beta_2": np.exp(-5.502197648895974),
               "adam_eps": np.exp(-16.919215725249092),
               "adam_wd": np.exp(-13.99956243808541),
               "max_lr": np.exp(-5.383090612225605),
               "cycle_peak": 0.35037784343793205
               },
        "abs": {"adam_beta_1": np.exp(-3.1576858739457845),
                "adam_beta_2": np.exp(-4.165206705873042),
                "adam_eps": np.exp(-20.430988799955056),
                "adam_wd": np.exp(-13.049933891070697),
                "max_lr": np.exp(-5.809683797646132),
                "cycle_peak": 0.34244342851740034
                },
        "cf_abs": {"adam_beta_1": np.exp(-5.453380890632929),
                   "adam_beta_2": np.exp(-5.879222236954101),
                   "adam_eps": np.exp(-18.303333640483068),
                   "adam_wd": np.exp(-15.152599023560422),
                   "max_lr": np.exp(-6.604045812173043),
                   "cycle_peak": 0.11189158130301018
                   },
        "l2_lae": {"adam_beta_1": np.exp(-2.4561852034212),
                   "adam_beta_2": np.exp(-5.176943480470942),
                   "adam_eps": np.exp(-16.032458209235187),
                   "adam_wd": np.exp(-12.860274699438266),
                   "max_lr": np.exp(-5.540947578537945),
                   "cycle_peak": 0.40750994546983904
                   },
        "max": {"adam_beta_1": np.exp(-2.2169207045481505),
                "adam_beta_2": np.exp(-7.793567052557596),
                "adam_eps": np.exp(-18.23187258333265),
                "adam_wd": np.exp(-12.867866026516422),
                "max_lr": np.exp(-5.416840501318637),
                "cycle_peak": 0.28254869607601146
                },
        "bin_partition_full": {
            "adam_beta_1": np.exp(-4.783),
            "adam_beta_2": np.exp(-7.027),
            "adam_eps": np.exp(-20.059),
            "adam_wd": np.exp(-13.176),
            "max_lr": np.exp(-7.673),
            "cycle_peak": 0.38,
        },
        "bin_partition_nopass": {
            "adam_beta_1": np.exp(-2.503),
            "adam_beta_2": np.exp(-5.404),
            "adam_eps": np.exp(-18.77),
            "adam_wd": np.exp(-9.692),
            "max_lr": np.exp(-7.418),
            "cycle_peak": 0.5,
        },
        "bin_all_full": {
            "adam_beta_1": np.exp(-3.414),
            "adam_beta_2": np.exp(-9.072),
            "adam_eps": np.exp(-18.119),
            "adam_wd": np.exp(-10.39),
            "max_lr": np.exp(-7.731),
            "cycle_peak": 0.23,
        },
        "bin_all_nopass": {
            "adam_beta_1": np.exp(-5.212),
            "adam_beta_2": np.exp(-8.352),
            "adam_eps": np.exp(-15.056),
            "adam_wd": np.exp(-12.53),
            "max_lr": np.exp(-6.346),
            "cycle_peak": 0.43,
        },
        "bin_all_nopass_sgm": {
            "adam_beta_1": np.exp(-3.991),
            "adam_beta_2": np.exp(-8.581),
            "adam_eps": np.exp(-18.375),
            "adam_wd": np.exp(-9.799),
            "max_lr": np.exp(-6.204),
            "cycle_peak": 0.41,
        },
        "lse": {
            "adam_beta_1": np.exp(rng.uniform(-5.36, -2.35)),
            "adam_beta_2": np.exp(rng.uniform(-10.54, -4)),
            "adam_eps": np.exp(rng.uniform(-21.42, -14.0)),
            "adam_wd": np.exp(rng.uniform(-14.01, -8)),
            "max_lr": np.exp(rng.uniform(-8, -4.06)),
            "cycle_peak": rng.uniform(0.25, 0.55),
        },
        "min": {
            "adam_beta_1": np.exp(rng.uniform(-4.57, -3.59)),
            "adam_beta_2": np.exp(rng.uniform(-10.36, -4)),
            "adam_eps": np.exp(rng.uniform(-22.75, -15.22)),
            "adam_wd": np.exp(rng.uniform(-14.91, -8)),
            "max_lr": np.exp(rng.uniform(-8, -4.72)),
            "cycle_peak": rng.uniform(0.13, 0.39),
        },
        "groupsort": {
            "adam_beta_1": np.exp(-3.991),
            "adam_beta_2": np.exp(-8.581),
            "adam_eps": np.exp(-18.375),
            "adam_wd": np.exp(-9.799),
            "max_lr": np.exp(-6.204),
            "cycle_peak": 0.41,
        },
        "leaky_relu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                       "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                       "adam_eps": np.exp(rng.uniform(-22, -15)),
                       "adam_wd": np.exp(rng.uniform(-15, -8)),
                       "max_lr": np.exp(rng.uniform(-8, -2)),
                       "cycle_peak": rng.uniform(0.1, 0.5)
                       },
        "crelu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                  "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                  "adam_eps": np.exp(rng.uniform(-22, -15)),
                  "adam_wd": np.exp(rng.uniform(-15, -8)),
                  "max_lr": np.exp(rng.uniform(-8, -2)),
                  "cycle_peak": rng.uniform(0.1, 0.5)
                  },
        "attention": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "prod": {
            "adam_beta_1": np.exp(-1.988),
            "adam_beta_2": np.exp(-6.843),
            "adam_eps": np.exp(-18.938),
            "adam_wd": np.exp(-11.329),
            "max_lr": np.exp(-6.496),
            "cycle_peak": 0.43,
        },
        "lae": {
            "adam_beta_1": np.exp(-3.577),
            "adam_beta_2": np.exp(-9.562),
            "adam_eps": np.exp(-18.105),
            "adam_wd": np.exp(-10.363),
            "max_lr": np.exp(-5.633),
            "cycle_peak": 0.4,
        },
        "signed_geomean": {
            "adam_beta_1": np.exp(-3.503),
            "adam_beta_2": np.exp(-6.915),
            "adam_eps": np.exp(-17.173),
            "adam_wd": np.exp(-8.704),
            "max_lr": np.exp(-7.673),
            "cycle_peak": 0.28,
        },
        "linf": {
            "adam_beta_1": np.exp(-3.507),
            "adam_beta_2": np.exp(-5.67),
            "adam_eps": np.exp(-19.311),
            "adam_wd": np.exp(-8.651),
            "max_lr": np.exp(-6.874),
            "cycle_peak": 0.38,
        },
        "swishk": {
            "adam_beta_1": np.exp(-2.123),
            "adam_beta_2": np.exp(-9.406),
            "adam_eps": np.exp(-17.43),
            "adam_wd": np.exp(-11.853),
            "max_lr": np.exp(-6.208),
            "cycle_peak": 0.2,
        },
        "swishk_p": {
            "adam_beta_1": np.power(10., -0.218),
            "adam_beta_2": np.power(10., -1.168),
            "adam_eps": np.power(10., -8.476),
            "adam_wd": np.power(10., -5.196),
            "max_lr": np.power(10., -2.507),
            "cycle_peak": 0.28,
        },
        "swish": {
            "adam_beta_1": np.power(10., -0.248),
            "adam_beta_2": np.power(10., -0.798),
            "adam_eps": np.power(10., -7.521),
            "adam_wd": np.power(10., -4.272),
            "max_lr": np.power(10., -2.409),
            "cycle_peak": 0.31,
        },
        "swishk_p_inv": {
            "adam_beta_1": np.power(10., -2.04),
            "adam_beta_2": np.power(10., -0.049),
            "adam_eps": np.power(10., -9.687),
            "adam_wd": np.power(10., -3.531),
            "max_lr": np.power(10., -2.731),
            "cycle_peak": 0.26,
        },
        "swishk_inv": {
            "adam_beta_1": np.power(10., -2.04),
            "adam_beta_2": np.power(10., -0.049),
            "adam_eps": np.power(10., -9.687),
            "adam_wd": np.power(10., -3.531),
            "max_lr": np.power(10., -2.731),
            "cycle_peak": 0.26,
        },

    }


def nn_cifar10(rng):
    return {
        "abs": {
            "adam_beta_1": np.exp(rng.uniform(-4.62, -3.19)),
            "adam_beta_2": np.exp(rng.uniform(-10.18, -4)),
            "adam_eps": np.exp(rng.uniform(-18.4, -15.45)),
            "adam_wd": np.exp(rng.uniform(-13.04, -8)),
            "max_lr": np.exp(rng.uniform(-8, -4.38)),
            "cycle_peak": rng.uniform(0.12, 0.35),
        },
        "combinact": {
            "adam_beta_1": np.exp(-1.458),
            "adam_beta_2": np.exp(-4.606),
            "adam_eps": np.exp(-17.223),
            "adam_wd": np.exp(-12.813),
            "max_lr": np.exp(-6.633),
            "cycle_peak": 0.39,
        },
        "min": {
            "adam_beta_1": np.exp(rng.uniform(-5.28, -2.64)),
            "adam_beta_2": np.exp(rng.uniform(-12.66, -4)),
            "adam_eps": np.exp(rng.uniform(-21.35, -17.08)),
            "adam_wd": np.exp(rng.uniform(-12.87, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.17)),
            "cycle_peak": rng.uniform(0.31, 0.47),
        },
        "lse": {
            "adam_beta_1": np.exp(rng.uniform(-4.88, -3.5)),
            "adam_beta_2": np.exp(rng.uniform(-7.78, -4)),
            "adam_eps": np.exp(rng.uniform(-21.98, -18.88)),
            "adam_wd": np.exp(rng.uniform(-14.89, -8)),
            "max_lr": np.exp(rng.uniform(-8, -4.98)),
            "cycle_peak": rng.uniform(0.13, 0.55),
        },
        "bin_partition_full": {
            "adam_beta_1": np.exp(-4.332),
            "adam_beta_2": np.exp(-3.767),
            "adam_eps": np.exp(-18.308),
            "adam_wd": np.exp(-9.862),
            "max_lr": np.exp(-6.931),
            "cycle_peak": 0.41,
        },
        "bin_partition_nopass": {
            "adam_beta_1": np.exp(-4.44),
            "adam_beta_2": np.exp(-6.949),
            "adam_eps": np.exp(-19.755),
            "adam_wd": np.exp(-10.131),
            "max_lr": np.exp(-7.172),
            "cycle_peak": 0.53,
        },
        "bin_all_full": {
            "adam_beta_1": np.exp(-4.467),
            "adam_beta_2": np.exp(-10.382),
            "adam_eps": np.exp(-17.37),
            "adam_wd": np.exp(-13.442),
            "max_lr": np.exp(-7.258),
            "cycle_peak": 0.31,
        },
        "bin_all_nopass": {
            "adam_beta_1": np.exp(-4.693),
            "adam_beta_2": np.exp(-4.776),
            "adam_eps": np.exp(-19.059),
            "adam_wd": np.exp(-8.235),
            "max_lr": np.exp(-6.73),
            "cycle_peak": 0.37,
        },
        "bin_all_nopass_sgm": {
            "adam_beta_1": np.exp(-2.786),
            "adam_beta_2": np.exp(-5.598),
            "adam_eps": np.exp(-17.453),
            "adam_wd": np.exp(-10.262),
            "max_lr": np.exp(-5.424),
            "cycle_peak": 0.46,
        },
        "groupsort": {
            "adam_beta_1": np.exp(-2.786),
            "adam_beta_2": np.exp(-5.598),
            "adam_eps": np.exp(-17.453),
            "adam_wd": np.exp(-10.262),
            "max_lr": np.exp(-5.424),
            "cycle_peak": 0.46,
        },
        "swish": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                  "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                  "adam_eps": np.exp(rng.uniform(-22, -15)),
                  "adam_wd": np.exp(rng.uniform(-15, -8)),
                  "max_lr": np.exp(rng.uniform(-8, -2)),
                  "cycle_peak": rng.uniform(0.1, 0.5)
                  },
        "leaky_relu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                       "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                       "adam_eps": np.exp(rng.uniform(-22, -15)),
                       "adam_wd": np.exp(rng.uniform(-15, -8)),
                       "max_lr": np.exp(rng.uniform(-8, -2)),
                       "cycle_peak": rng.uniform(0.1, 0.5)
                       },
        "crelu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                  "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                  "adam_eps": np.exp(rng.uniform(-22, -15)),
                  "adam_wd": np.exp(rng.uniform(-15, -8)),
                  "max_lr": np.exp(rng.uniform(-8, -2)),
                  "cycle_peak": rng.uniform(0.1, 0.5)
                  },
        "attention": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "prod": {
            "adam_beta_1": np.exp(-4.956),
            "adam_beta_2": np.exp(-11.273),
            "adam_eps": np.exp(-17.936),
            "adam_wd": np.exp(-11.633),
            "max_lr": np.exp(-5.4),
            "cycle_peak": 0.44,
        },
        "lae": {
            "adam_beta_1": np.exp(-1.495),
            "adam_beta_2": np.exp(-4.301),
            "adam_eps": np.exp(-19.16),
            "adam_wd": np.exp(-10.961),
            "max_lr": np.exp(-6.349),
            "cycle_peak": 0.45,
        },
        "signed_geomean": {
            "adam_beta_1": np.exp(-3.217),
            "adam_beta_2": np.exp(-7.189),
            "adam_eps": np.exp(-15.179),
            "adam_wd": np.exp(-12.354),
            "max_lr": np.exp(-4.616),
            "cycle_peak": 0.32,
        },
        "linf": {
            "adam_beta_1": np.exp(-4.62),
            "adam_beta_2": np.exp(-9.207),
            "adam_eps": np.exp(-17.558),
            "adam_wd": np.exp(-12.704),
            "max_lr": np.exp(-5.053),
            "cycle_peak": 0.43,
        },
        "swishk": {
            "adam_beta_1": np.exp(-1.866),
            "adam_beta_2": np.exp(-8.029),
            "adam_eps": np.exp(-19.944),
            "adam_wd": np.exp(-9.36),
            "max_lr": np.exp(-6.374),
            "cycle_peak": 0.41,
        },
        "l2": {
            "adam_beta_1": np.exp(-1.864),
            "adam_beta_2": np.exp(-5.638),
            "adam_eps": np.exp(-20.126),
            "adam_wd": np.exp(-11.404),
            "max_lr": np.exp(-5.361),
            "cycle_peak": 0.35,
        },
        "max": {
            "adam_beta_1": np.exp(-3.98),
            "adam_beta_2": np.exp(-9.089),
            "adam_eps": np.exp(-15.392),
            "adam_wd": np.exp(-9.2),
            "max_lr": np.exp(-6.435),
            "cycle_peak": 0.41,
        },
        "relu": {
            "adam_beta_1": np.exp(-1.862),
            "adam_beta_2": np.exp(-6.229),
            "adam_eps": np.exp(-18.889),
            "adam_wd": np.exp(-10.284),
            "max_lr": np.exp(-7.29),
            "cycle_peak": 0.35,
        },
    }


def nn_cifar100(rng):
    return {
        "abs": {
            "adam_beta_1": np.exp(rng.uniform(-3.51, -1.16)),
            "adam_beta_2": np.exp(rng.uniform(-8.6, -4)),
            "adam_eps": np.exp(rng.uniform(-18.86, -14.28)),
            "adam_wd": np.exp(rng.uniform(-13.94, -8)),
            "max_lr": np.exp(rng.uniform(-8, -4.44)),
            "cycle_peak": rng.uniform(0.21, 0.33),
        },
        "combinact": {
            "adam_beta_1": np.exp(-0.569),
            "adam_beta_2": np.exp(-6.147),
            "adam_eps": np.exp(-22.59),
            "adam_wd": np.exp(-11.483),
            "max_lr": np.exp(-6.114),
            "cycle_peak": 0.36,
        },
        "min": {
            "adam_beta_1": np.exp(rng.uniform(-2.53, -1.97)),
            "adam_beta_2": np.exp(rng.uniform(-11.01, -4)),
            "adam_eps": np.exp(rng.uniform(-21.33, -19.62)),
            "adam_wd": np.exp(rng.uniform(-14.87, -8)),
            "max_lr": np.exp(rng.uniform(-8, -4.62)),
            "cycle_peak": rng.uniform(0.04, 0.46),
        },
        "lse": {
            "adam_beta_1": np.exp(rng.uniform(-2.07, -0.04)),
            "adam_beta_2": np.exp(rng.uniform(-9.23, -4)),
            "adam_eps": np.exp(rng.uniform(-21.21, -20.61)),
            "adam_wd": np.exp(rng.uniform(-13.72, -8)),
            "max_lr": np.exp(rng.uniform(-8, -4.0)),
            "cycle_peak": rng.uniform(0.11, 0.48),
        },
        "bin_partition_full": {
            "adam_beta_1": np.exp(-3.971),
            "adam_beta_2": np.exp(-2.294),
            "adam_eps": np.exp(-18.141),
            "adam_wd": np.exp(-10.328),
            "max_lr": np.exp(-6.703),
            "cycle_peak": 0.31,
        },
        "bin_partition_nopass": {
            "adam_beta_1": np.exp(-0.8),
            "adam_beta_2": np.exp(-4.288),
            "adam_eps": np.exp(-16.044),
            "adam_wd": np.exp(-13.613),
            "max_lr": np.exp(-7.429),
            "cycle_peak": 0.41,
        },
        "bin_all_full": {
            "adam_beta_1": np.exp(-2.355),
            "adam_beta_2": np.exp(-7.541),
            "adam_eps": np.exp(-17.817),
            "adam_wd": np.exp(-10.147),
            "max_lr": np.exp(-8.754),
            "cycle_peak": 0.28,
        },
        "bin_all_nopass": {
            "adam_beta_1": np.exp(-0.809),
            "adam_beta_2": np.exp(-5.806),
            "adam_eps": np.exp(-20.363),
            "adam_wd": np.exp(-12.023),
            "max_lr": np.exp(-8.387),
            "cycle_peak": 0.39,
        },
        "bin_all_nopass_sgm": {
            "adam_beta_1": np.exp(-0.142),
            "adam_beta_2": np.exp(-6.827),
            "adam_eps": np.exp(-19.434),
            "adam_wd": np.exp(-13.35),
            "max_lr": np.exp(-7.864),
            "cycle_peak": 0.47,
        },
        "groupsort": {
            "adam_beta_1": np.exp(-0.142),
            "adam_beta_2": np.exp(-6.827),
            "adam_eps": np.exp(-19.434),
            "adam_wd": np.exp(-13.35),
            "max_lr": np.exp(-7.864),
            "cycle_peak": 0.47,
        },
        "swish": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                  "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                  "adam_eps": np.exp(rng.uniform(-22, -15)),
                  "adam_wd": np.exp(rng.uniform(-15, -8)),
                  "max_lr": np.exp(rng.uniform(-8, -2)),
                  "cycle_peak": rng.uniform(0.1, 0.5)
                  },
        "leaky_relu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                       "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                       "adam_eps": np.exp(rng.uniform(-22, -15)),
                       "adam_wd": np.exp(rng.uniform(-15, -8)),
                       "max_lr": np.exp(rng.uniform(-8, -2)),
                       "cycle_peak": rng.uniform(0.1, 0.5)
                       },
        "crelu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                  "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                  "adam_eps": np.exp(rng.uniform(-22, -15)),
                  "adam_wd": np.exp(rng.uniform(-15, -8)),
                  "max_lr": np.exp(rng.uniform(-8, -2)),
                  "cycle_peak": rng.uniform(0.1, 0.5)
                  },
        "attention": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "prod": {
            "adam_beta_1": np.exp(-0.328),
            "adam_beta_2": np.exp(-4.488),
            "adam_eps": np.exp(-17.427),
            "adam_wd": np.exp(-11.749),
            "max_lr": np.exp(-5.913),
            "cycle_peak": 0.35,
        },
        "lae": {
            "adam_beta_1": np.exp(-0.486),
            "adam_beta_2": np.exp(-4.6),
            "adam_eps": np.exp(-19.174),
            "adam_wd": np.exp(-11.895),
            "max_lr": np.exp(-6.653),
            "cycle_peak": 0.48,
        },
        "signed_geomean": {
            "adam_beta_1": np.exp(-1.384),
            "adam_beta_2": np.exp(-4.316),
            "adam_eps": np.exp(-17.028),
            "adam_wd": np.exp(-13.114),
            "max_lr": np.exp(-5.327),
            "cycle_peak": 0.18,
        },
        "linf": {
            "adam_beta_1": np.exp(-1.704),
            "adam_beta_2": np.exp(-5.718),
            "adam_eps": np.exp(-19.067),
            "adam_wd": np.exp(-10.578),
            "max_lr": np.exp(-5.479),
            "cycle_peak": 0.37,
        },
        "swishk": {
            "adam_beta_1": np.exp(-0.181),
            "adam_beta_2": np.exp(-6.726),
            "adam_eps": np.exp(-20.995),
            "adam_wd": np.exp(-10.212),
            "max_lr": np.exp(-7.162),
            "cycle_peak": 0.32,
        },
        "l2": {
            "adam_beta_1": np.exp(-1.158),
            "adam_beta_2": np.exp(-5.835),
            "adam_eps": np.exp(-20.66),
            "adam_wd": np.exp(-11.28),
            "max_lr": np.exp(-5.218),
            "cycle_peak": 0.51,
        },
        "max": {
            "adam_beta_1": np.exp(-1.113),
            "adam_beta_2": np.exp(-5.925),
            "adam_eps": np.exp(-21.026),
            "adam_wd": np.exp(-8.062),
            "max_lr": np.exp(-7.345),
            "cycle_peak": 0.24,
        },
        "relu": {
            "adam_beta_1": np.exp(-2.826),
            "adam_beta_2": np.exp(-7.272),
            "adam_eps": np.exp(-20.467),
            "adam_wd": np.exp(-8.658),
            "max_lr": np.exp(-7.03),
            "cycle_peak": 0.49,
        },
    }


def nn_fashion_mnist(rng):
    return {
        "relu": {
            "adam_beta_1": np.exp(rng.uniform(-4.99, -1.84)),
            "adam_beta_2": np.exp(rng.uniform(-7.89, -4)),
            "adam_eps": np.exp(rng.uniform(-23.02, -15.93)),
            "adam_wd": np.exp(rng.uniform(-13.93, -8)),
            "max_lr": np.exp(rng.uniform(-8, -4.95)),
            "cycle_peak": rng.uniform(0.18, 0.55),
        },
        "abs": {
            "adam_beta_1": np.exp(rng.uniform(-4.76, -2.62)),
            "adam_beta_2": np.exp(rng.uniform(-9.15, -4)),
            "adam_eps": np.exp(rng.uniform(-20.94, -16.14)),
            "adam_wd": np.exp(rng.uniform(-13.82, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.29)),
            "cycle_peak": rng.uniform(0.23, 0.46),
        },
        "combinact": {
            "adam_beta_1": np.exp(rng.uniform(-2.81, -1.24)),
            "adam_beta_2": np.exp(rng.uniform(-10.12, -4)),
            "adam_eps": np.exp(rng.uniform(-19.55, -14.14)),
            "adam_wd": np.exp(rng.uniform(-15.03, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.07)),
            "cycle_peak": rng.uniform(0.04, 0.53),
        },
        "max": {
            "adam_beta_1": np.exp(rng.uniform(-3.53, -2.11)),
            "adam_beta_2": np.exp(rng.uniform(-10.82, -4)),
            "adam_eps": np.exp(rng.uniform(-21.75, -17.62)),
            "adam_wd": np.exp(rng.uniform(-14.81, -8)),
            "max_lr": np.exp(rng.uniform(-8, -4.56)),
            "cycle_peak": rng.uniform(0.24, 0.3),
        },
        "min": {
            "adam_beta_1": np.exp(rng.uniform(-5.31, -2.42)),
            "adam_beta_2": np.exp(rng.uniform(-13.25, -4)),
            "adam_eps": np.exp(rng.uniform(-21.38, -15.88)),
            "adam_wd": np.exp(rng.uniform(-12.61, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.4)),
            "cycle_peak": rng.uniform(0.26, 0.4),
        },
        "lse": {
            "adam_beta_1": np.exp(rng.uniform(-5.07, -4.04)),
            "adam_beta_2": np.exp(rng.uniform(-9.96, -4)),
            "adam_eps": np.exp(rng.uniform(-21.58, -17.2)),
            "adam_wd": np.exp(rng.uniform(-14.36, -8)),
            "max_lr": np.exp(rng.uniform(-8, -4.06)),
            "cycle_peak": rng.uniform(0.14, 0.56),
        },
        "l2": {
            "adam_beta_1": np.exp(rng.uniform(-5.43, -2.33)),
            "adam_beta_2": np.exp(rng.uniform(-11.25, -4)),
            "adam_eps": np.exp(rng.uniform(-19.5, -16.14)),
            "adam_wd": np.exp(rng.uniform(-11.5, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.43)),
            "cycle_peak": rng.uniform(0.25, 0.37),
        },
        "bin_partition_full": {
            "adam_beta_1": np.exp(rng.uniform(-4.75, -3.87)),
            "adam_beta_2": np.exp(rng.uniform(-9.66, -4)),
            "adam_eps": np.exp(rng.uniform(-20.41, -16.81)),
            "adam_wd": np.exp(rng.uniform(-14.44, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.62)),
            "cycle_peak": rng.uniform(0.19, 0.43),
        },
        "bin_partition_nopass": {
            "adam_beta_1": np.exp(rng.uniform(-5, 0)),
            "adam_beta_2": np.exp(rng.uniform(-12, -4)),
            "adam_eps": np.exp(rng.uniform(-22, -15)),
            "adam_wd": np.exp(rng.uniform(-15, -8)),
            "max_lr": np.exp(rng.uniform(-8, -2)),
            "cycle_peak": rng.uniform(0.1, 0.5)
        },
        "bin_all_full": {
            "adam_beta_1": np.exp(rng.uniform(-4.62, -2.74)),
            "adam_beta_2": np.exp(rng.uniform(-10.63, -4)),
            "adam_eps": np.exp(rng.uniform(-20.13, -16.28)),
            "adam_wd": np.exp(rng.uniform(-14.26, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.36)),
            "cycle_peak": rng.uniform(0.15, 0.37),
        },
        "bin_all_nopass": {
            "adam_beta_1": np.exp(rng.uniform(-5, 0)),
            "adam_beta_2": np.exp(rng.uniform(-12, -4)),
            "adam_eps": np.exp(rng.uniform(-22, -15)),
            "adam_wd": np.exp(rng.uniform(-15, -8)),
            "max_lr": np.exp(rng.uniform(-8, -2)),
            "cycle_peak": rng.uniform(0.1, 0.5)
        },
        "bin_all_nopass_sgm": {
            "adam_beta_1": np.exp(rng.uniform(-5, 0)),
            "adam_beta_2": np.exp(rng.uniform(-12, -4)),
            "adam_eps": np.exp(rng.uniform(-22, -15)),
            "adam_wd": np.exp(rng.uniform(-15, -8)),
            "max_lr": np.exp(rng.uniform(-8, -2)),
            "cycle_peak": rng.uniform(0.1, 0.5)
        },
        "groupsort": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "swish": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                  "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                  "adam_eps": np.exp(rng.uniform(-22, -15)),
                  "adam_wd": np.exp(rng.uniform(-15, -8)),
                  "max_lr": np.exp(rng.uniform(-8, -2)),
                  "cycle_peak": rng.uniform(0.1, 0.5)
                  },
        "leaky_relu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                       "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                       "adam_eps": np.exp(rng.uniform(-22, -15)),
                       "adam_wd": np.exp(rng.uniform(-15, -8)),
                       "max_lr": np.exp(rng.uniform(-8, -2)),
                       "cycle_peak": rng.uniform(0.1, 0.5)
                       },
        "crelu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                  "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                  "adam_eps": np.exp(rng.uniform(-22, -15)),
                  "adam_wd": np.exp(rng.uniform(-15, -8)),
                  "max_lr": np.exp(rng.uniform(-8, -2)),
                  "cycle_peak": rng.uniform(0.1, 0.5)
                  },
        "attention": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "prod": {
            "adam_beta_1": np.exp(-2.083),
            "adam_beta_2": np.exp(-7.969),
            "adam_eps": np.exp(-20.482),
            "adam_wd": np.exp(-12.509),
            "max_lr": np.exp(-6.38),
            "cycle_peak": 0.35,
        },
        "lae": {
            "adam_beta_1": np.exp(-1.718),
            "adam_beta_2": np.exp(-7.105),
            "adam_eps": np.exp(-17.574),
            "adam_wd": np.exp(-11.999),
            "max_lr": np.exp(-5.85),
            "cycle_peak": 0.44,
        },
        "signed_geomean": {
            "adam_beta_1": np.exp(-3.965),
            "adam_beta_2": np.exp(-8.848),
            "adam_eps": np.exp(-16.18),
            "adam_wd": np.exp(-11.37),
            "max_lr": np.exp(-7.629),
            "cycle_peak": 0.27,
        },
        "linf": {
            "adam_beta_1": np.exp(-2.792),
            "adam_beta_2": np.exp(-9.319),
            "adam_eps": np.exp(-17.898),
            "adam_wd": np.exp(-11.942),
            "max_lr": np.exp(-6.778),
            "cycle_peak": 0.32,
        },
        "swishk": {
            "adam_beta_1": np.exp(-0.939),
            "adam_beta_2": np.exp(-8.65),
            "adam_eps": np.exp(-15.284),
            "adam_wd": np.exp(-13.387),
            "max_lr": np.exp(-6.891),
            "cycle_peak": 0.44,
        },
    }


def nn_svhn(rng):
    return {
        "relu": {
            "adam_beta_1": np.exp(rng.uniform(-5.02, -3.33)),
            "adam_beta_2": np.exp(rng.uniform(-10.88, -4)),
            "adam_eps": np.exp(rng.uniform(-22.46, -17.78)),
            "adam_wd": np.exp(rng.uniform(-14.32, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.5)),
            "cycle_peak": rng.uniform(0.25, 0.57),
        },
        "abs": {
            "adam_beta_1": np.exp(rng.uniform(-4.79, -2.88)),
            "adam_beta_2": np.exp(rng.uniform(-10.84, -4)),
            "adam_eps": np.exp(rng.uniform(-21.92, -16.97)),
            "adam_wd": np.exp(rng.uniform(-12.61, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.22)),
            "cycle_peak": rng.uniform(0.15, 0.42),
        },
        "combinact": {
            "adam_beta_1": np.exp(rng.uniform(-3.68, -1.63)),
            "adam_beta_2": np.exp(rng.uniform(-8.94, -4)),
            "adam_eps": np.exp(rng.uniform(-22.32, -14.13)),
            "adam_wd": np.exp(rng.uniform(-14.94, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.18)),
            "cycle_peak": rng.uniform(0.4, 0.49),
        },
        "max": {
            "adam_beta_1": np.exp(rng.uniform(-3.37, -2.77)),
            "adam_beta_2": np.exp(rng.uniform(-10.43, -4)),
            "adam_eps": np.exp(rng.uniform(-22.5, -17.12)),
            "adam_wd": np.exp(rng.uniform(-15.05, -8)),
            "max_lr": np.exp(rng.uniform(-8, -4.59)),
            "cycle_peak": rng.uniform(0.17, 0.33),
        },
        "min": {
            "adam_beta_1": np.exp(rng.uniform(-4.17, -3.04)),
            "adam_beta_2": np.exp(rng.uniform(-11.31, -4)),
            "adam_eps": np.exp(rng.uniform(-20.2, -15.02)),
            "adam_wd": np.exp(rng.uniform(-14.09, -8)),
            "max_lr": np.exp(rng.uniform(-8, -4.6)),
            "cycle_peak": rng.uniform(0.09, 0.41),
        },
        "lse": {
            "adam_beta_1": np.exp(rng.uniform(-4.88, -4.2)),
            "adam_beta_2": np.exp(rng.uniform(-8.69, -4)),
            "adam_eps": np.exp(rng.uniform(-22.15, -18.61)),
            "adam_wd": np.exp(rng.uniform(-14.32, -8)),
            "max_lr": np.exp(rng.uniform(-8, -4.86)),
            "cycle_peak": rng.uniform(0.08, 0.48),
        },
        "l2": {
            "adam_beta_1": np.exp(rng.uniform(-3.4, -1.46)),
            "adam_beta_2": np.exp(rng.uniform(-7.95, -4)),
            "adam_eps": np.exp(rng.uniform(-21.39, -14.16)),
            "adam_wd": np.exp(rng.uniform(-15.29, -8)),
            "max_lr": np.exp(rng.uniform(-8, -4.76)),
            "cycle_peak": rng.uniform(0.29, 0.47),
        },
        "bin_partition_full": {
            "adam_beta_1": np.exp(rng.uniform(-4.75, -3.87)),
            "adam_beta_2": np.exp(rng.uniform(-9.66, -4)),
            "adam_eps": np.exp(rng.uniform(-20.41, -16.81)),
            "adam_wd": np.exp(rng.uniform(-14.44, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.62)),
            "cycle_peak": rng.uniform(0.19, 0.43),
        },
        "bin_partition_nopass": {
            "adam_beta_1": np.exp(rng.uniform(-5, 0)),
            "adam_beta_2": np.exp(rng.uniform(-12, -4)),
            "adam_eps": np.exp(rng.uniform(-22, -15)),
            "adam_wd": np.exp(rng.uniform(-15, -8)),
            "max_lr": np.exp(rng.uniform(-8, -2)),
            "cycle_peak": rng.uniform(0.1, 0.5)
        },
        "bin_all_full": {
            "adam_beta_1": np.exp(rng.uniform(-4.62, -2.74)),
            "adam_beta_2": np.exp(rng.uniform(-10.63, -4)),
            "adam_eps": np.exp(rng.uniform(-20.13, -16.28)),
            "adam_wd": np.exp(rng.uniform(-14.26, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.36)),
            "cycle_peak": rng.uniform(0.15, 0.37),
        },
        "bin_all_nopass": {
            "adam_beta_1": np.exp(rng.uniform(-5, 0)),
            "adam_beta_2": np.exp(rng.uniform(-12, -4)),
            "adam_eps": np.exp(rng.uniform(-22, -15)),
            "adam_wd": np.exp(rng.uniform(-15, -8)),
            "max_lr": np.exp(rng.uniform(-8, -2)),
            "cycle_peak": rng.uniform(0.1, 0.5)
        },
        "bin_all_nopass_sgm": {
            "adam_beta_1": np.exp(rng.uniform(-5, 0)),
            "adam_beta_2": np.exp(rng.uniform(-12, -4)),
            "adam_eps": np.exp(rng.uniform(-22, -15)),
            "adam_wd": np.exp(rng.uniform(-15, -8)),
            "max_lr": np.exp(rng.uniform(-8, -2)),
            "cycle_peak": rng.uniform(0.1, 0.5)
        },
        "groupsort": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "swish": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                  "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                  "adam_eps": np.exp(rng.uniform(-22, -15)),
                  "adam_wd": np.exp(rng.uniform(-15, -8)),
                  "max_lr": np.exp(rng.uniform(-8, -2)),
                  "cycle_peak": rng.uniform(0.1, 0.5)
                  },
        "leaky_relu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                       "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                       "adam_eps": np.exp(rng.uniform(-22, -15)),
                       "adam_wd": np.exp(rng.uniform(-15, -8)),
                       "max_lr": np.exp(rng.uniform(-8, -2)),
                       "cycle_peak": rng.uniform(0.1, 0.5)
                       },
        "crelu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                  "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                  "adam_eps": np.exp(rng.uniform(-22, -15)),
                  "adam_wd": np.exp(rng.uniform(-15, -8)),
                  "max_lr": np.exp(rng.uniform(-8, -2)),
                  "cycle_peak": rng.uniform(0.1, 0.5)
                  },
        "attention": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "prod": {
            "adam_beta_1": np.exp(-3.31),
            "adam_beta_2": np.exp(-8.864),
            "adam_eps": np.exp(-18.242),
            "adam_wd": np.exp(-12.419),
            "max_lr": np.exp(-5.688),
            "cycle_peak": 0.29,
        },
        "lae": {
            "adam_beta_1": np.exp(-2.507),
            "adam_beta_2": np.exp(-5.764),
            "adam_eps": np.exp(-18.095),
            "adam_wd": np.exp(-14.838),
            "max_lr": np.exp(-5.402),
            "cycle_peak": 0.36,
        },
        "signed_geomean": {
            "adam_beta_1": np.exp(-3.957),
            "adam_beta_2": np.exp(-7.401),
            "adam_eps": np.exp(-15.392),
            "adam_wd": np.exp(-13.556),
            "max_lr": np.exp(-6.188),
            "cycle_peak": 0.35,
        },
        "linf": {
            "adam_beta_1": np.exp(-2.721),
            "adam_beta_2": np.exp(-3.956),
            "adam_eps": np.exp(-17.433),
            "adam_wd": np.exp(-12.286),
            "max_lr": np.exp(-5.805),
            "cycle_peak": 0.33,
        },
        "swishk": {
            "adam_beta_1": np.exp(-2.082),
            "adam_beta_2": np.exp(-6.272),
            "adam_eps": np.exp(-20.402),
            "adam_wd": np.exp(-14.71),
            "max_lr": np.exp(-6.28),
            "cycle_peak": 0.5,
        },
    }


def cnn_mnist(rng):
    return {
        "relu": {"adam_beta_1": np.exp(-2.388609721693893),
                 "adam_beta_2": np.exp(-5.390639433192069),
                 "adam_eps": np.exp(-16.796444850789),
                 "adam_wd": np.exp(-13.253336539963065),
                 "max_lr": np.exp(-7.422704622466667),
                 "cycle_peak": 0.44656736904941696
                 },
        "multi_relu": {"adam_beta_1": np.exp(-3.0574547429631496),
                       "adam_beta_2": np.exp(-4.247448624972093),
                       "adam_eps": np.exp(-19.92328795485814),
                       "adam_wd": np.exp(-12.591192480548075),
                       "max_lr": np.exp(-7.183540698498811),
                       "cycle_peak": 0.1847688059239794
                       },
        "combinact": {"adam_beta_1": np.exp(-2.114439459425412),
                      "adam_beta_2": np.exp(-5.354100834352032),
                      "adam_eps": np.exp(-20.485014830268515),
                      "adam_wd": np.exp(-13.947985139710585),
                      "max_lr": np.exp(-6.710677476450968),
                      "cycle_peak": 0.45592998059813267
                      },
        "l2": {"adam_beta_1": np.exp(-2.798405250416228),
               "adam_beta_2": np.exp(-4.852502321085275),
               "adam_eps": np.exp(-17.69422318951969),
               "adam_wd": np.exp(-13.28251690242802),
               "max_lr": np.exp(-6.61986865125839),
               "cycle_peak": 0.2908993031473296
               },
        "abs": {"adam_beta_1": np.exp(-2.3046899444891737),
                "adam_beta_2": np.exp(-4.081976310255959),
                "adam_eps": np.exp(-18.81496719551105),
                "adam_wd": np.exp(-12.889583720257814),
                "max_lr": np.exp(-6.294826015471599),
                "cycle_peak": 0.43927944846465605
                },
        "l2_lae": {"adam_beta_1": np.exp(-3.819899346335893),
                   "adam_beta_2": np.exp(-4.187621156111093),
                   "adam_eps": np.exp(-15.889624513084568),
                   "adam_wd": np.exp(-13.735330355123828),
                   "max_lr": np.exp(-6.796509116066224),
                   "cycle_peak": 0.30452694109961825
                   },
        "max": {"adam_beta_1": np.exp(-3.0681674156782175),
                "adam_beta_2": np.exp(-4.08491441310968),
                "adam_eps": np.exp(-16.879716225530277),
                "adam_wd": np.exp(-12.851561693962033),
                "max_lr": np.exp(-5.689213936356616),
                "cycle_peak": 0.3131204615398092
                },
        "bin_partition_full": {
            "adam_beta_1": np.exp(-4.396),
            "adam_beta_2": np.exp(-9.212),
            "adam_eps": np.exp(-18.197),
            "adam_wd": np.exp(-13.691),
            "max_lr": np.exp(-7.091),
            "cycle_peak": 0.45,
        },
        "bin_partition_nopass": {
            "adam_beta_1": np.exp(-4.025),
            "adam_beta_2": np.exp(-6.843),
            "adam_eps": np.exp(-15.846),
            "adam_wd": np.exp(-12.438),
            "max_lr": np.exp(-7.028),
            "cycle_peak": 0.22,
        },
        "bin_all_full": {
            "adam_beta_1": np.exp(-3.5),
            "adam_beta_2": np.exp(-7.277),
            "adam_eps": np.exp(-19.771),
            "adam_wd": np.exp(-12.865),
            "max_lr": np.exp(-7.673),
            "cycle_peak": 0.32,
        },
        "bin_all_nopass": {
            "adam_beta_1": np.exp(-3.42),
            "adam_beta_2": np.exp(-6.522),
            "adam_eps": np.exp(-15.558),
            "adam_wd": np.exp(-12.84),
            "max_lr": np.exp(-7.289),
            "cycle_peak": 0.37,
        },
        "bin_all_nopass_sgm": {
            "adam_beta_1": np.exp(-4.208),
            "adam_beta_2": np.exp(-9.464),
            "adam_eps": np.exp(-17.589),
            "adam_wd": np.exp(-11.531),
            "max_lr": np.exp(-6.844),
            "cycle_peak": 0.35,
        },
        "lse": {
            "adam_beta_1": np.exp(rng.uniform(-4.66, -4.04)),
            "adam_beta_2": np.exp(rng.uniform(-8.08, -4)),
            "adam_eps": np.exp(rng.uniform(-21.53, -18.83)),
            "adam_wd": np.exp(rng.uniform(-14.82, -8)),
            "max_lr": np.exp(rng.uniform(-8, -4.15)),
            "cycle_peak": rng.uniform(0.12, 0.54),
        },
        "min": {
            "adam_beta_1": np.exp(rng.uniform(-4.85, -4.16)),
            "adam_beta_2": np.exp(rng.uniform(-9.55, -4)),
            "adam_eps": np.exp(rng.uniform(-21.56, -19.57)),
            "adam_wd": np.exp(rng.uniform(-13.59, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.09)),
            "cycle_peak": rng.uniform(0.12, 0.36),
        },
        "groupsort": {
            "adam_beta_1": np.exp(-4.208),
            "adam_beta_2": np.exp(-9.464),
            "adam_eps": np.exp(-17.589),
            "adam_wd": np.exp(-11.531),
            "max_lr": np.exp(-6.844),
            "cycle_peak": 0.35,
        },
        "leaky_relu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                       "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                       "adam_eps": np.exp(rng.uniform(-22, -15)),
                       "adam_wd": np.exp(rng.uniform(-15, -8)),
                       "max_lr": np.exp(rng.uniform(-8, -2)),
                       "cycle_peak": rng.uniform(0.1, 0.5)
                       },
        "crelu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                  "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                  "adam_eps": np.exp(rng.uniform(-22, -15)),
                  "adam_wd": np.exp(rng.uniform(-15, -8)),
                  "max_lr": np.exp(rng.uniform(-8, -2)),
                  "cycle_peak": rng.uniform(0.1, 0.5)
                  },
        "attention": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "prod": {
            "adam_beta_1": np.exp(-2.786),
            "adam_beta_2": np.exp(-7.789),
            "adam_eps": np.exp(-15.232),
            "adam_wd": np.exp(-14.37),
            "max_lr": np.exp(-5.794),
            "cycle_peak": 0.27,
        },
        "lae": {
            "adam_beta_1": np.exp(-4.372),
            "adam_beta_2": np.exp(-8.425),
            "adam_eps": np.exp(-19.608),
            "adam_wd": np.exp(-14.203),
            "max_lr": np.exp(-6.038),
            "cycle_peak": 0.44,
        },
        "signed_geomean": {
            "adam_beta_1": np.exp(-4.144),
            "adam_beta_2": np.exp(-10.359),
            "adam_eps": np.exp(-19.613),
            "adam_wd": np.exp(-10.628),
            "max_lr": np.exp(-7.3),
            "cycle_peak": 0.36,
        },
        "linf": {
            "adam_beta_1": np.exp(-4.662),
            "adam_beta_2": np.exp(-7.229),
            "adam_eps": np.exp(-17.635),
            "adam_wd": np.exp(-10.579),
            "max_lr": np.exp(-6.644),
            "cycle_peak": 0.3,
        },
        "swishk": {
            "adam_beta_1": np.exp(-1.982),
            "adam_beta_2": np.exp(-5.511),
            "adam_eps": np.exp(-18.54),
            "adam_wd": np.exp(-11.097),
            "max_lr": np.exp(-6.618),
            "cycle_peak": 0.26,
        },
        "swishk_p": {
            "adam_beta_1": np.power(10., -0.643),
            "adam_beta_2": np.power(10., -0.837),
            "adam_eps": np.power(10., -9.221),
            "adam_wd": np.power(10., -4.855),
            "max_lr": np.power(10., -2.856),
            "cycle_peak": 0.43,
        },
        "swish": {
            "adam_beta_1": np.power(10., -1.11),
            "adam_beta_2": np.power(10., -0.021),
            "adam_eps": np.power(10., -7.646),
            "adam_wd": np.power(10., -5.057),
            "max_lr": np.power(10., -3.318),
            "cycle_peak": 0.28,
        },
        "swishk_p_inv": {
            "adam_beta_1": np.power(10., -0.917),
            "adam_beta_2": np.power(10., -1.278),
            "adam_eps": np.power(10., -5.779),
            "adam_wd": np.power(10., -4.871),
            "max_lr": np.power(10., -2.909),
            "cycle_peak": 0.27,
        },
        "swishk_inv": {
            "adam_beta_1": np.power(10., -0.917),
            "adam_beta_2": np.power(10., -1.278),
            "adam_eps": np.power(10., -5.779),
            "adam_wd": np.power(10., -4.871),
            "max_lr": np.power(10., -2.909),
            "cycle_peak": 0.27,
        },
    }


def cnn_cifar10(rng):
    return {
        "relu": {"adam_beta_1": np.exp(-2.2190390756250093),
                 "adam_beta_2": np.exp(-7.366914026786562),
                 "adam_eps": np.exp(-18.10735819580839),
                 "adam_wd": np.exp(-12.13318302542048),
                 "max_lr": np.exp(-7.467215859430617),
                 "cycle_peak": 0.49156736259596534
                 },
        "multi_relu": {"adam_beta_1": np.exp(-2.3543718655934547),
                       "adam_beta_2": np.exp(-7.063659565937045),
                       "adam_eps": np.exp(-19.22492182089545),
                       "adam_wd": np.exp(-10.269718286116909),
                       "max_lr": np.exp(-6.8770611857136075),
                       "cycle_peak": 0.4253002234015769
                       },
        "combinact": {"adam_beta_1": np.exp(-2.016683834468364),
                      "adam_beta_2": np.exp(-7.820800773443709),
                      "adam_eps": np.exp(-18.01936303461807),
                      "adam_wd": np.exp(-14.443234599437305),
                      "max_lr": np.exp(-6.7810979033379875),
                      "cycle_peak": 0.5439417885046983
                      },
        "l2": {"adam_beta_1": np.exp(-1.5749000540594622),
               "adam_beta_2": np.exp(-3.6702433473885767),
               "adam_eps": np.exp(-17.788820155080888),
               "adam_wd": np.exp(-14.297423169143356),
               "max_lr": np.exp(-7.246379919517856),
               "cycle_peak": 0.4721781379107825
               },
        "abs": {"adam_beta_1": np.exp(-2.13818391159692),
                "adam_beta_2": np.exp(-5.343641237772224),
                "adam_eps": np.exp(-20.681560434670658),
                "adam_wd": np.exp(-13.95451768488049),
                "max_lr": np.exp(-6.719724510164729),
                "cycle_peak": 0.4296646156803744
                },
        "l2_lae": {"adam_beta_1": np.exp(-1.511652530521991),
                   "adam_beta_2": np.exp(-5.10036591613782),
                   "adam_eps": np.exp(-20.158860548398614),
                   "adam_wd": np.exp(-11.630968574087534),
                   "max_lr": np.exp(-6.992522933149952),
                   "cycle_peak": 0.41503241211381126
                   },
        "max": {"adam_beta_1": np.exp(-2.3151753028565794),
                "adam_beta_2": np.exp(-4.660984944761118),
                "adam_eps": np.exp(-19.231174065933367),
                "adam_wd": np.exp(-8.028370292260313),
                "max_lr": np.exp(-6.720521846837062),
                "cycle_peak": 0.4677382752348381
                },
        "bin_partition_full": {
            "adam_beta_1": np.exp(-4.082),
            "adam_beta_2": np.exp(-5.432),
            "adam_eps": np.exp(-16.589),
            "adam_wd": np.exp(-6.939),
            "max_lr": np.exp(-6.82),
            "cycle_peak": 0.32,
        },
        "bin_partition_nopass": {
            "adam_beta_1": np.exp(-3.344),
            "adam_beta_2": np.exp(-6.013),
            "adam_eps": np.exp(-17.725),
            "adam_wd": np.exp(-7.304),
            "max_lr": np.exp(-6.91),
            "cycle_peak": 0.44,
        },
        "bin_all_full": {
            "adam_beta_1": np.exp(-3.218),
            "adam_beta_2": np.exp(-5.583),
            "adam_eps": np.exp(-18.233),
            "adam_wd": np.exp(-8.169),
            "max_lr": np.exp(-6.644),
            "cycle_peak": 0.31,
        },
        "bin_all_nopass": {
            "adam_beta_1": np.exp(-1.764),
            "adam_beta_2": np.exp(-4.837),
            "adam_eps": np.exp(-20.353),
            "adam_wd": np.exp(-13.275),
            "max_lr": np.exp(-6.687),
            "cycle_peak": 0.37,
        },
        "bin_all_nopass_sgm": {
            "adam_beta_1": np.exp(-1.098),
            "adam_beta_2": np.exp(-4.744),
            "adam_eps": np.exp(-20.271),
            "adam_wd": np.exp(-8.679),
            "max_lr": np.exp(-6.701),
            "cycle_peak": 0.47,
        },
        "min": {
            "adam_beta_1": np.exp(rng.uniform(-4.62, -4.22)),
            "adam_beta_2": np.exp(rng.uniform(-9.24, -4)),
            "adam_eps": np.exp(rng.uniform(-22.22, -19.01)),
            "adam_wd": np.exp(rng.uniform(-13.57, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.37)),
            "cycle_peak": rng.uniform(0.15, 0.36),
        },
        "groupsort": {
            "adam_beta_1": np.exp(-1.098),
            "adam_beta_2": np.exp(-4.744),
            "adam_eps": np.exp(-20.271),
            "adam_wd": np.exp(-8.679),
            "max_lr": np.exp(-6.701),
            "cycle_peak": 0.47,
        },
        "swish": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                  "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                  "adam_eps": np.exp(rng.uniform(-22, -15)),
                  "adam_wd": np.exp(rng.uniform(-15, -8)),
                  "max_lr": np.exp(rng.uniform(-8, -2)),
                  "cycle_peak": rng.uniform(0.1, 0.5)
                  },
        "leaky_relu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                       "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                       "adam_eps": np.exp(rng.uniform(-22, -15)),
                       "adam_wd": np.exp(rng.uniform(-15, -8)),
                       "max_lr": np.exp(rng.uniform(-8, -2)),
                       "cycle_peak": rng.uniform(0.1, 0.5)
                       },
        "crelu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                  "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                  "adam_eps": np.exp(rng.uniform(-22, -15)),
                  "adam_wd": np.exp(rng.uniform(-15, -8)),
                  "max_lr": np.exp(rng.uniform(-8, -2)),
                  "cycle_peak": rng.uniform(0.1, 0.5)
                  },
        "attention": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "prod": {
            "adam_beta_1": np.exp(-3.625),
            "adam_beta_2": np.exp(-7.58),
            "adam_eps": np.exp(-20.431),
            "adam_wd": np.exp(-11.619),
            "max_lr": np.exp(-5.095),
            "cycle_peak": 0.26,
        },
        "lae": {
            "adam_beta_1": np.exp(-2.416),
            "adam_beta_2": np.exp(-5.859),
            "adam_eps": np.exp(-21.838),
            "adam_wd": np.exp(-8.437),
            "max_lr": np.exp(-6.361),
            "cycle_peak": 0.26,
        },
        "signed_geomean": {
            "adam_beta_1": np.exp(-2.902),
            "adam_beta_2": np.exp(-6.757),
            "adam_eps": np.exp(-20.183),
            "adam_wd": np.exp(-7.494),
            "max_lr": np.exp(-7.385),
            "cycle_peak": 0.36,
        },
        "linf": {
            "adam_beta_1": np.exp(-3.386),
            "adam_beta_2": np.exp(-6.703),
            "adam_eps": np.exp(-17.036),
            "adam_wd": np.exp(-9.135),
            "max_lr": np.exp(-7.181),
            "cycle_peak": 0.23,
        },
        "swishk": {
            "adam_beta_1": np.exp(-1.316),
            "adam_beta_2": np.exp(-5.638),
            "adam_eps": np.exp(-18.628),
            "adam_wd": np.exp(-10.222),
            "max_lr": np.exp(-6.226),
            "cycle_peak": 0.37,
        },
    }


def cnn_cifar100(rng):
    return {
        "relu": {"adam_beta_1": np.exp(-2.426797853932341),
                 "adam_beta_2": np.exp(-8.32944462067869),
                 "adam_eps": np.exp(-19.791364579217475),
                 "adam_wd": np.exp(-11.772470713882507),
                 "max_lr": np.exp(-7.267477071254713),
                 "cycle_peak": 0.4517569495205036
                 },
        "multi_relu": {"adam_beta_1": np.exp(-1.9834923464612166),
                       "adam_beta_2": np.exp(-5.558187320969269),
                       "adam_eps": np.exp(-20.847973902813152),
                       "adam_wd": np.exp(-11.72610495446386),
                       "max_lr": np.exp(-7.177889555045069),
                       "cycle_peak": 0.36399876953225746
                       },
        "combinact": {"adam_beta_1": np.exp(-1.90329956854611),
                      "adam_beta_2": np.exp(-7.286469824634688),
                      "adam_eps": np.exp(-19.72445941906418),
                      "adam_wd": np.exp(-10.818233549453154),
                      "max_lr": np.exp(-6.861297361914738),
                      "cycle_peak": 0.5659379474281131
                      },
        "l2": {"adam_beta_1": np.exp(-1.8662979339075287),
               "adam_beta_2": np.exp(-4.588487764348233),
               "adam_eps": np.exp(-16.502805171408045),
               "adam_wd": np.exp(-10.825735290142346),
               "max_lr": np.exp(-7.23765587612481),
               "cycle_peak": 0.4491990506275296
               },
        "abs": {"adam_beta_1": np.exp(-2.4807814370731145),
                "adam_beta_2": np.exp(-7.619981735822295),
                "adam_eps": np.exp(-18.931867256862652),
                "adam_wd": np.exp(-11.812467208793322),
                "max_lr": np.exp(-7.195658475528992),
                "cycle_peak": 0.44128128173478703
                },
        "l2_lae": {"adam_beta_1": np.exp(-1.8490078448379565),
                   "adam_beta_2": np.exp(-5.281849941263149),
                   "adam_eps": np.exp(-17.490838571636928),
                   "adam_wd": np.exp(-11.897886419488167),
                   "max_lr": np.exp(-7.020510360640074),
                   "cycle_peak": 0.43013832410896696
                   },
        "max": {"adam_beta_1": np.exp(-2.7994828802749576),
                "adam_beta_2": np.exp(-5.369720801695676),
                "adam_eps": np.exp(-17.285952081693686),
                "adam_wd": np.exp(-8.600017225696668),
                "max_lr": np.exp(-6.220972625072611),
                "cycle_peak": 0.41433149467346075
                },
        "bin_partition_full": {
            "adam_beta_1": np.exp(-4.54),
            "adam_beta_2": np.exp(-1.939),
            "adam_eps": np.exp(-17.866),
            "adam_wd": np.exp(-14.347),
            "max_lr": np.exp(-6.818),
            "cycle_peak": 0.26,
        },
        "bin_partition_nopass": {
            "adam_beta_1": np.exp(-1.553),
            "adam_beta_2": np.exp(-3.63),
            "adam_eps": np.exp(-17.55),
            "adam_wd": np.exp(-11.815),
            "max_lr": np.exp(-7.324),
            "cycle_peak": 0.4,
        },
        "bin_all_full": {
            "adam_beta_1": np.exp(-3.972),
            "adam_beta_2": np.exp(-2.525),
            "adam_eps": np.exp(-18.304),
            "adam_wd": np.exp(-12.505),
            "max_lr": np.exp(-6.933),
            "cycle_peak": 0.27,
        },
        "bin_all_nopass": {
            "adam_beta_1": np.exp(-1.358),
            "adam_beta_2": np.exp(-3.446),
            "adam_eps": np.exp(-19.762),
            "adam_wd": np.exp(-14.591),
            "max_lr": np.exp(-6.906),
            "cycle_peak": 0.35,
        },
        "bin_all_nopass_sgm": {
            "adam_beta_1": np.exp(-1.466),
            "adam_beta_2": np.exp(-6.636),
            "adam_eps": np.exp(-17.271),
            "adam_wd": np.exp(-7.618),
            "max_lr": np.exp(-6.752),
            "cycle_peak": 0.48,
        },
        "lse": {
            "adam_beta_1": np.exp(rng.uniform(-4.73, -4.27)),
            "adam_beta_2": np.exp(rng.uniform(-8.2, -4)),
            "adam_eps": np.exp(rng.uniform(-22.11, -19.89)),
            "adam_wd": np.exp(rng.uniform(-14.96, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.28)),
            "cycle_peak": rng.uniform(0.03, 0.55),
        },
        "min": {
            "adam_beta_1": np.exp(rng.uniform(-4.59, -4.19)),
            "adam_beta_2": np.exp(rng.uniform(-9.3, -4)),
            "adam_eps": np.exp(rng.uniform(-22.11, -18.88)),
            "adam_wd": np.exp(rng.uniform(-13.9, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.38)),
            "cycle_peak": rng.uniform(0.15, 0.38),
        },
        "groupsort": {
            "adam_beta_1": np.exp(-1.466),
            "adam_beta_2": np.exp(-6.636),
            "adam_eps": np.exp(-17.271),
            "adam_wd": np.exp(-7.618),
            "max_lr": np.exp(-6.752),
            "cycle_peak": 0.48,
        },
        "swish": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                  "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                  "adam_eps": np.exp(rng.uniform(-22, -15)),
                  "adam_wd": np.exp(rng.uniform(-15, -8)),
                  "max_lr": np.exp(rng.uniform(-8, -2)),
                  "cycle_peak": rng.uniform(0.1, 0.5)
                  },
        "leaky_relu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                       "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                       "adam_eps": np.exp(rng.uniform(-22, -15)),
                       "adam_wd": np.exp(rng.uniform(-15, -8)),
                       "max_lr": np.exp(rng.uniform(-8, -2)),
                       "cycle_peak": rng.uniform(0.1, 0.5)
                       },
        "crelu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                  "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                  "adam_eps": np.exp(rng.uniform(-22, -15)),
                  "adam_wd": np.exp(rng.uniform(-15, -8)),
                  "max_lr": np.exp(rng.uniform(-8, -2)),
                  "cycle_peak": rng.uniform(0.1, 0.5)
                  },
        "attention": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "prod": {
            "adam_beta_1": np.exp(-4.542),
            "adam_beta_2": np.exp(-7.62),
            "adam_eps": np.exp(-20.769),
            "adam_wd": np.exp(-13.215),
            "max_lr": np.exp(-5.049),
            "cycle_peak": 0.14,
        },
        "lae": {
            "adam_beta_1": np.exp(-3.231),
            "adam_beta_2": np.exp(-5.886),
            "adam_eps": np.exp(-22.894),
            "adam_wd": np.exp(-8.35),
            "max_lr": np.exp(-6.021),
            "cycle_peak": 0.27,
        },
        "signed_geomean": {
            "adam_beta_1": np.exp(-4.097),
            "adam_beta_2": np.exp(-3.17),
            "adam_eps": np.exp(-18.338),
            "adam_wd": np.exp(-8.331),
            "max_lr": np.exp(-7.13),
            "cycle_peak": 0.31,
        },
        "linf": {
            "adam_beta_1": np.exp(-4.385),
            "adam_beta_2": np.exp(-9.0),
            "adam_eps": np.exp(-17.123),
            "adam_wd": np.exp(-9.967),
            "max_lr": np.exp(-7.793),
            "cycle_peak": 0.29,
        },
        "swishk": {
            "adam_beta_1": np.exp(-1.533),
            "adam_beta_2": np.exp(-7.964),
            "adam_eps": np.exp(-18.938),
            "adam_wd": np.exp(-9.239),
            "max_lr": np.exp(-6.286),
            "cycle_peak": 0.47,
        },
    }


def cnn_fashion_mnist(rng):
    return {
        "relu": {
            "adam_beta_1": np.exp(rng.uniform(-4.17, -2.71)),
            "adam_beta_2": np.exp(rng.uniform(-9.29, -4)),
            "adam_eps": np.exp(rng.uniform(-21.78, -15.99)),
            "adam_wd": np.exp(rng.uniform(-13.09, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.16)),
            "cycle_peak": rng.uniform(0.07, 0.35),
        },
        "abs": {
            "adam_beta_1": np.exp(rng.uniform(-4.68, -3.61)),
            "adam_beta_2": np.exp(rng.uniform(-11.45, -4)),
            "adam_eps": np.exp(rng.uniform(-22.57, -17.64)),
            "adam_wd": np.exp(rng.uniform(-13.15, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.86)),
            "cycle_peak": rng.uniform(0.23, 0.47),
        },
        "combinact": {
            "adam_beta_1": np.exp(rng.uniform(-2.68, -1.28)),
            "adam_beta_2": np.exp(rng.uniform(-11.25, -4)),
            "adam_eps": np.exp(rng.uniform(-22.37, -15.73)),
            "adam_wd": np.exp(rng.uniform(-15.48, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.27)),
            "cycle_peak": rng.uniform(0.15, 0.5),
        },
        "max": {
            "adam_beta_1": np.exp(rng.uniform(-4.31, -2.82)),
            "adam_beta_2": np.exp(rng.uniform(-10.71, -4)),
            "adam_eps": np.exp(rng.uniform(-23.49, -16.33)),
            "adam_wd": np.exp(rng.uniform(-15.49, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.16)),
            "cycle_peak": rng.uniform(0.1, 0.33),
        },
        "min": {
            "adam_beta_1": np.exp(rng.uniform(-5.23, -2.07)),
            "adam_beta_2": np.exp(rng.uniform(-12.35, -4)),
            "adam_eps": np.exp(rng.uniform(-21.86, -16.95)),
            "adam_wd": np.exp(rng.uniform(-12.03, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.13)),
            "cycle_peak": rng.uniform(0.33, 0.45),
        },
        "lse": {
            "adam_beta_1": np.exp(rng.uniform(-4.73, -4.27)),
            "adam_beta_2": np.exp(rng.uniform(-8.2, -4)),
            "adam_eps": np.exp(rng.uniform(-22.11, -19.89)),
            "adam_wd": np.exp(rng.uniform(-14.96, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.28)),
            "cycle_peak": rng.uniform(0.03, 0.55),
        },
        "l2": {
            "adam_beta_1": np.exp(rng.uniform(-5.12, -2.91)),
            "adam_beta_2": np.exp(rng.uniform(-10.83, -4)),
            "adam_eps": np.exp(rng.uniform(-21.16, -16.7)),
            "adam_wd": np.exp(rng.uniform(-12.47, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.84)),
            "cycle_peak": rng.uniform(0.26, 0.39),
        },
        "bin_partition_full": {
            "adam_beta_1": np.exp(rng.uniform(-4.75, -3.87)),
            "adam_beta_2": np.exp(rng.uniform(-9.66, -4)),
            "adam_eps": np.exp(rng.uniform(-20.41, -16.81)),
            "adam_wd": np.exp(rng.uniform(-14.44, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.62)),
            "cycle_peak": rng.uniform(0.19, 0.43),
        },
        "bin_partition_nopass": {
            "adam_beta_1": np.exp(rng.uniform(-5, 0)),
            "adam_beta_2": np.exp(rng.uniform(-12, -4)),
            "adam_eps": np.exp(rng.uniform(-22, -15)),
            "adam_wd": np.exp(rng.uniform(-15, -8)),
            "max_lr": np.exp(rng.uniform(-8, -2)),
            "cycle_peak": rng.uniform(0.1, 0.5)
        },
        "bin_all_full": {
            "adam_beta_1": np.exp(rng.uniform(-4.62, -2.74)),
            "adam_beta_2": np.exp(rng.uniform(-10.63, -4)),
            "adam_eps": np.exp(rng.uniform(-20.13, -16.28)),
            "adam_wd": np.exp(rng.uniform(-14.26, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.36)),
            "cycle_peak": rng.uniform(0.15, 0.37),
        },
        "bin_all_nopass": {
            "adam_beta_1": np.exp(rng.uniform(-5, 0)),
            "adam_beta_2": np.exp(rng.uniform(-12, -4)),
            "adam_eps": np.exp(rng.uniform(-22, -15)),
            "adam_wd": np.exp(rng.uniform(-15, -8)),
            "max_lr": np.exp(rng.uniform(-8, -2)),
            "cycle_peak": rng.uniform(0.1, 0.5)
        },
        "bin_all_nopass_sgm": {
            "adam_beta_1": np.exp(rng.uniform(-5, 0)),
            "adam_beta_2": np.exp(rng.uniform(-12, -4)),
            "adam_eps": np.exp(rng.uniform(-22, -15)),
            "adam_wd": np.exp(rng.uniform(-15, -8)),
            "max_lr": np.exp(rng.uniform(-8, -2)),
            "cycle_peak": rng.uniform(0.1, 0.5)
        },
        "groupsort": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "swish": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                  "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                  "adam_eps": np.exp(rng.uniform(-22, -15)),
                  "adam_wd": np.exp(rng.uniform(-15, -8)),
                  "max_lr": np.exp(rng.uniform(-8, -2)),
                  "cycle_peak": rng.uniform(0.1, 0.5)
                  },
        "leaky_relu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                       "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                       "adam_eps": np.exp(rng.uniform(-22, -15)),
                       "adam_wd": np.exp(rng.uniform(-15, -8)),
                       "max_lr": np.exp(rng.uniform(-8, -2)),
                       "cycle_peak": rng.uniform(0.1, 0.5)
                       },
        "crelu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                  "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                  "adam_eps": np.exp(rng.uniform(-22, -15)),
                  "adam_wd": np.exp(rng.uniform(-15, -8)),
                  "max_lr": np.exp(rng.uniform(-8, -2)),
                  "cycle_peak": rng.uniform(0.1, 0.5)
                  },
        "attention": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "prod": {
            "adam_beta_1": np.exp(-3.279),
            "adam_beta_2": np.exp(-7.387),
            "adam_eps": np.exp(-17.635),
            "adam_wd": np.exp(-11.021),
            "max_lr": np.exp(-5.492),
            "cycle_peak": 0.1,
        },
        "lae": {
            "adam_beta_1": np.exp(-4.317),
            "adam_beta_2": np.exp(-8.818),
            "adam_eps": np.exp(-19.535),
            "adam_wd": np.exp(-8.502),
            "max_lr": np.exp(-6.706),
            "cycle_peak": 0.38,
        },
        "signed_geomean": {
            "adam_beta_1": np.exp(-2.357),
            "adam_beta_2": np.exp(-6.279),
            "adam_eps": np.exp(-16.016),
            "adam_wd": np.exp(-6.766),
            "max_lr": np.exp(-7.161),
            "cycle_peak": 0.39,
        },
        "linf": {
            "adam_beta_1": np.exp(-2.957),
            "adam_beta_2": np.exp(-7.153),
            "adam_eps": np.exp(-15.426),
            "adam_wd": np.exp(-8.379),
            "max_lr": np.exp(-7.266),
            "cycle_peak": 0.33,
        },
        "swishk": {
            "adam_beta_1": np.exp(-2.013),
            "adam_beta_2": np.exp(-7.967),
            "adam_eps": np.exp(-15.783),
            "adam_wd": np.exp(-11.96),
            "max_lr": np.exp(-6.541),
            "cycle_peak": 0.43,
        },
    }


def cnn_svhn(rng):
    return {
        "relu": {
            "adam_beta_1": np.exp(rng.uniform(-4.6, -3.47)),
            "adam_beta_2": np.exp(rng.uniform(-8.94, -4)),
            "adam_eps": np.exp(rng.uniform(-21.5, -16.48)),
            "adam_wd": np.exp(rng.uniform(-12.32, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.04)),
            "cycle_peak": rng.uniform(0.11, 0.54),
        },
        "abs": {
            "adam_beta_1": np.exp(rng.uniform(-4.92, -3.26)),
            "adam_beta_2": np.exp(rng.uniform(-10.57, -4)),
            "adam_eps": np.exp(rng.uniform(-20.5, -16.64)),
            "adam_wd": np.exp(rng.uniform(-13.06, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.91)),
            "cycle_peak": rng.uniform(0.33, 0.52),
        },
        "combinact": {
            "adam_beta_1": np.exp(rng.uniform(-2.73, -0.3)),
            "adam_beta_2": np.exp(rng.uniform(-9.28, -4)),
            "adam_eps": np.exp(rng.uniform(-22.92, -17.2)),
            "adam_wd": np.exp(rng.uniform(-15.13, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.27)),
            "cycle_peak": rng.uniform(0.12, 0.45),
        },
        "max": {
            "adam_beta_1": np.exp(rng.uniform(-4.57, -2.96)),
            "adam_beta_2": np.exp(rng.uniform(-11.64, -4)),
            "adam_eps": np.exp(rng.uniform(-20.66, -14.08)),
            "adam_wd": np.exp(rng.uniform(-13.07, -8)),
            "max_lr": np.exp(rng.uniform(-8, -4.52)),
            "cycle_peak": rng.uniform(0.04, 0.46),
        },
        "min": {
            "adam_beta_1": np.exp(rng.uniform(-5.28, -2.34)),
            "adam_beta_2": np.exp(rng.uniform(-12.35, -4)),
            "adam_eps": np.exp(rng.uniform(-21.44, -16.86)),
            "adam_wd": np.exp(rng.uniform(-11.69, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.06)),
            "cycle_peak": rng.uniform(0.36, 0.45),
        },
        "lse": {
            "adam_beta_1": np.exp(rng.uniform(-4.63, -3.25)),
            "adam_beta_2": np.exp(rng.uniform(-9.14, -4)),
            "adam_eps": np.exp(rng.uniform(-21.56, -14.63)),
            "adam_wd": np.exp(rng.uniform(-13.68, -8)),
            "max_lr": np.exp(rng.uniform(-8, -4.53)),
            "cycle_peak": rng.uniform(0.26, 0.51),
        },
        "l2": {
            "adam_beta_1": np.exp(rng.uniform(-5.2, -3.51)),
            "adam_beta_2": np.exp(rng.uniform(-10.89, -4)),
            "adam_eps": np.exp(rng.uniform(-20.78, -15.97)),
            "adam_wd": np.exp(rng.uniform(-12.97, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.48)),
            "cycle_peak": rng.uniform(0.2, 0.4),
        },
        "bin_partition_full": {
            "adam_beta_1": np.exp(rng.uniform(-4.75, -3.87)),
            "adam_beta_2": np.exp(rng.uniform(-9.66, -4)),
            "adam_eps": np.exp(rng.uniform(-20.41, -16.81)),
            "adam_wd": np.exp(rng.uniform(-14.44, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.62)),
            "cycle_peak": rng.uniform(0.19, 0.43),
        },
        "bin_partition_nopass": {
            "adam_beta_1": np.exp(rng.uniform(-5, 0)),
            "adam_beta_2": np.exp(rng.uniform(-12, -4)),
            "adam_eps": np.exp(rng.uniform(-22, -15)),
            "adam_wd": np.exp(rng.uniform(-15, -8)),
            "max_lr": np.exp(rng.uniform(-8, -2)),
            "cycle_peak": rng.uniform(0.1, 0.5)
        },
        "bin_all_full": {
            "adam_beta_1": np.exp(rng.uniform(-4.62, -2.74)),
            "adam_beta_2": np.exp(rng.uniform(-10.63, -4)),
            "adam_eps": np.exp(rng.uniform(-20.13, -16.28)),
            "adam_wd": np.exp(rng.uniform(-14.26, -8)),
            "max_lr": np.exp(rng.uniform(-8, -5.36)),
            "cycle_peak": rng.uniform(0.15, 0.37),
        },
        "bin_all_nopass": {
            "adam_beta_1": np.exp(rng.uniform(-5, 0)),
            "adam_beta_2": np.exp(rng.uniform(-12, -4)),
            "adam_eps": np.exp(rng.uniform(-22, -15)),
            "adam_wd": np.exp(rng.uniform(-15, -8)),
            "max_lr": np.exp(rng.uniform(-8, -2)),
            "cycle_peak": rng.uniform(0.1, 0.5)
        },
        "bin_all_nopass_sgm": {
            "adam_beta_1": np.exp(rng.uniform(-5, 0)),
            "adam_beta_2": np.exp(rng.uniform(-12, -4)),
            "adam_eps": np.exp(rng.uniform(-22, -15)),
            "adam_wd": np.exp(rng.uniform(-15, -8)),
            "max_lr": np.exp(rng.uniform(-8, -2)),
            "cycle_peak": rng.uniform(0.1, 0.5)
        },
        "groupsort": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "swish": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                  "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                  "adam_eps": np.exp(rng.uniform(-22, -15)),
                  "adam_wd": np.exp(rng.uniform(-15, -8)),
                  "max_lr": np.exp(rng.uniform(-8, -2)),
                  "cycle_peak": rng.uniform(0.1, 0.5)
                  },
        "leaky_relu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                       "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                       "adam_eps": np.exp(rng.uniform(-22, -15)),
                       "adam_wd": np.exp(rng.uniform(-15, -8)),
                       "max_lr": np.exp(rng.uniform(-8, -2)),
                       "cycle_peak": rng.uniform(0.1, 0.5)
                       },
        "crelu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                  "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                  "adam_eps": np.exp(rng.uniform(-22, -15)),
                  "adam_wd": np.exp(rng.uniform(-15, -8)),
                  "max_lr": np.exp(rng.uniform(-8, -2)),
                  "cycle_peak": rng.uniform(0.1, 0.5)
                  },
        "attention": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "prod": {
            "adam_beta_1": np.exp(-3.498),
            "adam_beta_2": np.exp(-4.641),
            "adam_eps": np.exp(-17.118),
            "adam_wd": np.exp(-13.514),
            "max_lr": np.exp(-5.448),
            "cycle_peak": 0.14,
        },
        "lae": {
            "adam_beta_1": np.exp(-4.287),
            "adam_beta_2": np.exp(-6.678),
            "adam_eps": np.exp(-19.676),
            "adam_wd": np.exp(-6.737),
            "max_lr": np.exp(-7.004),
            "cycle_peak": 0.28,
        },
        "signed_geomean": {
            "adam_beta_1": np.exp(-3.526),
            "adam_beta_2": np.exp(-4.483),
            "adam_eps": np.exp(-16.479),
            "adam_wd": np.exp(-6.532),
            "max_lr": np.exp(-7.299),
            "cycle_peak": 0.39,
        },
        "linf": {
            "adam_beta_1": np.exp(-2.87),
            "adam_beta_2": np.exp(-7.816),
            "adam_eps": np.exp(-14.878),
            "adam_wd": np.exp(-8.756),
            "max_lr": np.exp(-7.12),
            "cycle_peak": 0.36,
        },
        "swishk": {
            "adam_beta_1": np.exp(-2.079),
            "adam_beta_2": np.exp(-8.289),
            "adam_eps": np.exp(-15.8),
            "adam_wd": np.exp(-8.386),
            "max_lr": np.exp(-6.783),
            "cycle_peak": 0.47,
        },
    }


def resnet_mnist(rng):
    return {
        "max": {
            "adam_beta_1": np.power(10., -2.683),
            "adam_beta_2": np.power(10., -1.672),
            "adam_eps": np.power(10., -4.88),
            "adam_wd": np.power(10., -4.561),
            "max_lr": np.power(10., -3.659),
            "cycle_peak": 0.39,
        },
        "relu": {
            "adam_beta_1": np.power(10., -1.695),
            "adam_beta_2": np.power(10., -0.48),
            "adam_eps": np.power(10., -6.622),
            "adam_wd": np.power(10., -4.263),
            "max_lr": np.power(10., -4.229),
            "cycle_peak": 0.22,
        },
        "multi_relu": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                       "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                       "adam_eps": np.power(10., rng.uniform(-10, -6)),
                       "adam_wd": np.power(10., rng.uniform(-6, -2)),
                       "max_lr": np.power(10., rng.uniform(-6, -1)),
                       "cycle_peak": rng.uniform(0.1, 0.5)
                       },
        "combinact": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                      "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                      "adam_eps": np.power(10., rng.uniform(-10, -6)),
                      "adam_wd": np.power(10., rng.uniform(-6, -2)),
                      "max_lr": np.power(10., rng.uniform(-6, -1)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "l2": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
               "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
               "adam_eps": np.power(10., rng.uniform(-10, -6)),
               "adam_wd": np.power(10., rng.uniform(-6, -2)),
               "max_lr": np.power(10., rng.uniform(-6, -1)),
               "cycle_peak": rng.uniform(0.1, 0.5)
               },
        "abs": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                "adam_eps": np.power(10., rng.uniform(-10, -6)),
                "adam_wd": np.power(10., rng.uniform(-6, -2)),
                "max_lr": np.power(10., rng.uniform(-6, -1)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "l2_lae": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                   "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                   "adam_eps": np.power(10., rng.uniform(-10, -6)),
                   "adam_wd": np.power(10., rng.uniform(-6, -2)),
                   "max_lr": np.power(10., rng.uniform(-6, -1)),
                   "cycle_peak": rng.uniform(0.1, 0.5)
                   },
        "bin_partition_full": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                               "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                               "adam_eps": np.power(10., rng.uniform(-10, -6)),
                               "adam_wd": np.power(10., rng.uniform(-6, -2)),
                               "max_lr": np.power(10., rng.uniform(-6, -1)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "bin_partition_nopass": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                                 "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                                 "adam_eps": np.power(10., rng.uniform(-10, -6)),
                                 "adam_wd": np.power(10., rng.uniform(-6, -2)),
                                 "max_lr": np.power(10., rng.uniform(-6, -1)),
                                 "cycle_peak": rng.uniform(0.1, 0.5)
                                 },
        "bin_all_full": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                         "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                         "adam_eps": np.power(10., rng.uniform(-10, -6)),
                         "adam_wd": np.power(10., rng.uniform(-6, -2)),
                         "max_lr": np.power(10., rng.uniform(-6, -1)),
                         "cycle_peak": rng.uniform(0.1, 0.5)
                         },
        "bin_all_nopass": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                           "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                           "adam_eps": np.power(10., rng.uniform(-10, -6)),
                           "adam_wd": np.power(10., rng.uniform(-6, -2)),
                           "max_lr": np.power(10., rng.uniform(-6, -1)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "bin_all_nopass_sgm": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                               "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                               "adam_eps": np.power(10., rng.uniform(-10, -6)),
                               "adam_wd": np.power(10., rng.uniform(-6, -2)),
                               "max_lr": np.power(10., rng.uniform(-6, -1)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "lse": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                "adam_eps": np.power(10., rng.uniform(-10, -6)),
                "adam_wd": np.power(10., rng.uniform(-6, -2)),
                "max_lr": np.power(10., rng.uniform(-6, -1)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "min": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                "adam_eps": np.power(10., rng.uniform(-10, -6)),
                "adam_wd": np.power(10., rng.uniform(-6, -2)),
                "max_lr": np.power(10., rng.uniform(-6, -1)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "groupsort": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                      "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                      "adam_eps": np.power(10., rng.uniform(-10, -6)),
                      "adam_wd": np.power(10., rng.uniform(-6, -2)),
                      "max_lr": np.power(10., rng.uniform(-6, -1)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "swish": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                  "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                  "adam_eps": np.power(10., rng.uniform(-10, -6)),
                  "adam_wd": np.power(10., rng.uniform(-6, -2)),
                  "max_lr": np.power(10., rng.uniform(-6, -1)),
                  "cycle_peak": rng.uniform(0.1, 0.5)
                  },
        "leaky_relu": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                       "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                       "adam_eps": np.power(10., rng.uniform(-10, -6)),
                       "adam_wd": np.power(10., rng.uniform(-6, -2)),
                       "max_lr": np.power(10., rng.uniform(-6, -1)),
                       "cycle_peak": rng.uniform(0.1, 0.5)
                       },
        "crelu": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                  "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                  "adam_eps": np.power(10., rng.uniform(-10, -6)),
                  "adam_wd": np.power(10., rng.uniform(-6, -2)),
                  "max_lr": np.power(10., rng.uniform(-6, -1)),
                  "cycle_peak": rng.uniform(0.1, 0.5)
                  },
        "attention": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                      "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                      "adam_eps": np.power(10., rng.uniform(-10, -6)),
                      "adam_wd": np.power(10., rng.uniform(-6, -2)),
                      "max_lr": np.power(10., rng.uniform(-6, -1)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "prod": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                 "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                 "adam_eps": np.power(10., rng.uniform(-10, -6)),
                 "adam_wd": np.power(10., rng.uniform(-6, -2)),
                 "max_lr": np.power(10., rng.uniform(-6, -1)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "lae": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                "adam_eps": np.power(10., rng.uniform(-10, -6)),
                "adam_wd": np.power(10., rng.uniform(-6, -2)),
                "max_lr": np.power(10., rng.uniform(-6, -1)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "signed_geomean": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                           "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                           "adam_eps": np.power(10., rng.uniform(-10, -6)),
                           "adam_wd": np.power(10., rng.uniform(-6, -2)),
                           "max_lr": np.power(10., rng.uniform(-6, -1)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "linf": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                 "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                 "adam_eps": np.power(10., rng.uniform(-10, -6)),
                 "adam_wd": np.power(10., rng.uniform(-6, -2)),
                 "max_lr": np.power(10., rng.uniform(-6, -1)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "swishk": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                   "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                   "adam_eps": np.power(10., rng.uniform(-10, -6)),
                   "adam_wd": np.power(10., rng.uniform(-6, -2)),
                   "max_lr": np.power(10., rng.uniform(-6, -1)),
                   "cycle_peak": rng.uniform(0.1, 0.5)
                   },
    }


def resnet_cifar10(rng):
    return {
        "max": {
            "adam_beta_1": np.power(10., -1.713),
            "adam_beta_2": np.power(10., -0.076),
            "adam_eps": np.power(10., -8.436),
            "adam_wd": np.power(10., -4.671),
            "max_lr": np.power(10., -3.222),
            "cycle_peak": 0.44,
        },
        "relu": {
            "adam_beta_1": np.power(10., -0.167),
            "adam_beta_2": np.power(10., -0.218),
            "adam_eps": np.power(10., -8.203),
            "adam_wd": np.power(10., -5.103),
            "max_lr": np.power(10., -3.321),
            "cycle_peak": 0.24,
        },
        "multi_relu": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                       "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                       "adam_eps": np.power(10., rng.uniform(-10, -6)),
                       "adam_wd": np.power(10., rng.uniform(-6, -2)),
                       "max_lr": np.power(10., rng.uniform(-6, -1)),
                       "cycle_peak": rng.uniform(0.1, 0.5)
                       },
        "combinact": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                      "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                      "adam_eps": np.power(10., rng.uniform(-10, -6)),
                      "adam_wd": np.power(10., rng.uniform(-6, -2)),
                      "max_lr": np.power(10., rng.uniform(-6, -1)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "l2": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
               "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
               "adam_eps": np.power(10., rng.uniform(-10, -6)),
               "adam_wd": np.power(10., rng.uniform(-6, -2)),
               "max_lr": np.power(10., rng.uniform(-6, -1)),
               "cycle_peak": rng.uniform(0.1, 0.5)
               },
        "abs": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                "adam_eps": np.power(10., rng.uniform(-10, -6)),
                "adam_wd": np.power(10., rng.uniform(-6, -2)),
                "max_lr": np.power(10., rng.uniform(-6, -1)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "l2_lae": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                   "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                   "adam_eps": np.power(10., rng.uniform(-10, -6)),
                   "adam_wd": np.power(10., rng.uniform(-6, -2)),
                   "max_lr": np.power(10., rng.uniform(-6, -1)),
                   "cycle_peak": rng.uniform(0.1, 0.5)
                   },
        "bin_partition_full": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                               "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                               "adam_eps": np.power(10., rng.uniform(-10, -6)),
                               "adam_wd": np.power(10., rng.uniform(-6, -2)),
                               "max_lr": np.power(10., rng.uniform(-6, -1)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "bin_partition_nopass": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                                 "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                                 "adam_eps": np.power(10., rng.uniform(-10, -6)),
                                 "adam_wd": np.power(10., rng.uniform(-6, -2)),
                                 "max_lr": np.power(10., rng.uniform(-6, -1)),
                                 "cycle_peak": rng.uniform(0.1, 0.5)
                                 },
        "bin_all_full": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                         "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                         "adam_eps": np.power(10., rng.uniform(-10, -6)),
                         "adam_wd": np.power(10., rng.uniform(-6, -2)),
                         "max_lr": np.power(10., rng.uniform(-6, -1)),
                         "cycle_peak": rng.uniform(0.1, 0.5)
                         },
        "bin_all_nopass": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                           "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                           "adam_eps": np.power(10., rng.uniform(-10, -6)),
                           "adam_wd": np.power(10., rng.uniform(-6, -2)),
                           "max_lr": np.power(10., rng.uniform(-6, -1)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "bin_all_nopass_sgm": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                               "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                               "adam_eps": np.power(10., rng.uniform(-10, -6)),
                               "adam_wd": np.power(10., rng.uniform(-6, -2)),
                               "max_lr": np.power(10., rng.uniform(-6, -1)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "lse": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                "adam_eps": np.power(10., rng.uniform(-10, -6)),
                "adam_wd": np.power(10., rng.uniform(-6, -2)),
                "max_lr": np.power(10., rng.uniform(-6, -1)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "min": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                "adam_eps": np.power(10., rng.uniform(-10, -6)),
                "adam_wd": np.power(10., rng.uniform(-6, -2)),
                "max_lr": np.power(10., rng.uniform(-6, -1)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "groupsort": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                      "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                      "adam_eps": np.power(10., rng.uniform(-10, -6)),
                      "adam_wd": np.power(10., rng.uniform(-6, -2)),
                      "max_lr": np.power(10., rng.uniform(-6, -1)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "swish": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                  "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                  "adam_eps": np.power(10., rng.uniform(-10, -6)),
                  "adam_wd": np.power(10., rng.uniform(-6, -2)),
                  "max_lr": np.power(10., rng.uniform(-6, -1)),
                  "cycle_peak": rng.uniform(0.1, 0.5)
                  },
        "leaky_relu": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                       "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                       "adam_eps": np.power(10., rng.uniform(-10, -6)),
                       "adam_wd": np.power(10., rng.uniform(-6, -2)),
                       "max_lr": np.power(10., rng.uniform(-6, -1)),
                       "cycle_peak": rng.uniform(0.1, 0.5)
                       },
        "crelu": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                  "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                  "adam_eps": np.power(10., rng.uniform(-10, -6)),
                  "adam_wd": np.power(10., rng.uniform(-6, -2)),
                  "max_lr": np.power(10., rng.uniform(-6, -1)),
                  "cycle_peak": rng.uniform(0.1, 0.5)
                  },
        "attention": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                      "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                      "adam_eps": np.power(10., rng.uniform(-10, -6)),
                      "adam_wd": np.power(10., rng.uniform(-6, -2)),
                      "max_lr": np.power(10., rng.uniform(-6, -1)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "prod": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                 "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                 "adam_eps": np.power(10., rng.uniform(-10, -6)),
                 "adam_wd": np.power(10., rng.uniform(-6, -2)),
                 "max_lr": np.power(10., rng.uniform(-6, -1)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "lae": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                "adam_eps": np.power(10., rng.uniform(-10, -6)),
                "adam_wd": np.power(10., rng.uniform(-6, -2)),
                "max_lr": np.power(10., rng.uniform(-6, -1)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "signed_geomean": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                           "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                           "adam_eps": np.power(10., rng.uniform(-10, -6)),
                           "adam_wd": np.power(10., rng.uniform(-6, -2)),
                           "max_lr": np.power(10., rng.uniform(-6, -1)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "linf": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                 "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                 "adam_eps": np.power(10., rng.uniform(-10, -6)),
                 "adam_wd": np.power(10., rng.uniform(-6, -2)),
                 "max_lr": np.power(10., rng.uniform(-6, -1)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "swishk": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                   "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                   "adam_eps": np.power(10., rng.uniform(-10, -6)),
                   "adam_wd": np.power(10., rng.uniform(-6, -2)),
                   "max_lr": np.power(10., rng.uniform(-6, -1)),
                   "cycle_peak": rng.uniform(0.1, 0.5)
                   },
    }


def resnet_cifar100(rng):
    return {
        "max": {
            "adam_beta_1": np.power(10., -1.891),
            "adam_beta_2": np.power(10., -0.628),
            "adam_eps": np.power(10., -7.962),
            "adam_wd": np.power(10., -3.985),
            "max_lr": np.power(10., -3.352),
            "cycle_peak": 0.32,
        },
        "relu": {
            "adam_beta_1": np.power(10., -1.507),
            "adam_beta_2": np.power(10., -0.755),
            "adam_eps": np.power(10., -8.933),
            "adam_wd": np.power(10., -3.953),
            "max_lr": np.power(10., -3.619),
            "cycle_peak": 0.22,
        },
        "multi_relu": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                       "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                       "adam_eps": np.power(10., rng.uniform(-10, -6)),
                       "adam_wd": np.power(10., rng.uniform(-6, -2)),
                       "max_lr": np.power(10., rng.uniform(-6, -1)),
                       "cycle_peak": rng.uniform(0.1, 0.5)
                       },
        "combinact": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                      "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                      "adam_eps": np.power(10., rng.uniform(-10, -6)),
                      "adam_wd": np.power(10., rng.uniform(-6, -2)),
                      "max_lr": np.power(10., rng.uniform(-6, -1)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "l2": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
               "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
               "adam_eps": np.power(10., rng.uniform(-10, -6)),
               "adam_wd": np.power(10., rng.uniform(-6, -2)),
               "max_lr": np.power(10., rng.uniform(-6, -1)),
               "cycle_peak": rng.uniform(0.1, 0.5)
               },
        "abs": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                "adam_eps": np.power(10., rng.uniform(-10, -6)),
                "adam_wd": np.power(10., rng.uniform(-6, -2)),
                "max_lr": np.power(10., rng.uniform(-6, -1)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "l2_lae": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                   "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                   "adam_eps": np.power(10., rng.uniform(-10, -6)),
                   "adam_wd": np.power(10., rng.uniform(-6, -2)),
                   "max_lr": np.power(10., rng.uniform(-6, -1)),
                   "cycle_peak": rng.uniform(0.1, 0.5)
                   },
        "bin_partition_full": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                               "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                               "adam_eps": np.power(10., rng.uniform(-10, -6)),
                               "adam_wd": np.power(10., rng.uniform(-6, -2)),
                               "max_lr": np.power(10., rng.uniform(-6, -1)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "bin_partition_nopass": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                                 "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                                 "adam_eps": np.power(10., rng.uniform(-10, -6)),
                                 "adam_wd": np.power(10., rng.uniform(-6, -2)),
                                 "max_lr": np.power(10., rng.uniform(-6, -1)),
                                 "cycle_peak": rng.uniform(0.1, 0.5)
                                 },
        "bin_all_full": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                         "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                         "adam_eps": np.power(10., rng.uniform(-10, -6)),
                         "adam_wd": np.power(10., rng.uniform(-6, -2)),
                         "max_lr": np.power(10., rng.uniform(-6, -1)),
                         "cycle_peak": rng.uniform(0.1, 0.5)
                         },
        "bin_all_nopass": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                           "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                           "adam_eps": np.power(10., rng.uniform(-10, -6)),
                           "adam_wd": np.power(10., rng.uniform(-6, -2)),
                           "max_lr": np.power(10., rng.uniform(-6, -1)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "bin_all_nopass_sgm": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                               "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                               "adam_eps": np.power(10., rng.uniform(-10, -6)),
                               "adam_wd": np.power(10., rng.uniform(-6, -2)),
                               "max_lr": np.power(10., rng.uniform(-6, -1)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "lse": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                "adam_eps": np.power(10., rng.uniform(-10, -6)),
                "adam_wd": np.power(10., rng.uniform(-6, -2)),
                "max_lr": np.power(10., rng.uniform(-6, -1)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "min": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                "adam_eps": np.power(10., rng.uniform(-10, -6)),
                "adam_wd": np.power(10., rng.uniform(-6, -2)),
                "max_lr": np.power(10., rng.uniform(-6, -1)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "groupsort": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                      "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                      "adam_eps": np.power(10., rng.uniform(-10, -6)),
                      "adam_wd": np.power(10., rng.uniform(-6, -2)),
                      "max_lr": np.power(10., rng.uniform(-6, -1)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "swish": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                  "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                  "adam_eps": np.power(10., rng.uniform(-10, -6)),
                  "adam_wd": np.power(10., rng.uniform(-6, -2)),
                  "max_lr": np.power(10., rng.uniform(-6, -1)),
                  "cycle_peak": rng.uniform(0.1, 0.5)
                  },
        "leaky_relu": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                       "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                       "adam_eps": np.power(10., rng.uniform(-10, -6)),
                       "adam_wd": np.power(10., rng.uniform(-6, -2)),
                       "max_lr": np.power(10., rng.uniform(-6, -1)),
                       "cycle_peak": rng.uniform(0.1, 0.5)
                       },
        "crelu": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                  "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                  "adam_eps": np.power(10., rng.uniform(-10, -6)),
                  "adam_wd": np.power(10., rng.uniform(-6, -2)),
                  "max_lr": np.power(10., rng.uniform(-6, -1)),
                  "cycle_peak": rng.uniform(0.1, 0.5)
                  },
        "attention": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                      "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                      "adam_eps": np.power(10., rng.uniform(-10, -6)),
                      "adam_wd": np.power(10., rng.uniform(-6, -2)),
                      "max_lr": np.power(10., rng.uniform(-6, -1)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "prod": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                 "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                 "adam_eps": np.power(10., rng.uniform(-10, -6)),
                 "adam_wd": np.power(10., rng.uniform(-6, -2)),
                 "max_lr": np.power(10., rng.uniform(-6, -1)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "lae": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                "adam_eps": np.power(10., rng.uniform(-10, -6)),
                "adam_wd": np.power(10., rng.uniform(-6, -2)),
                "max_lr": np.power(10., rng.uniform(-6, -1)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "signed_geomean": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                           "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                           "adam_eps": np.power(10., rng.uniform(-10, -6)),
                           "adam_wd": np.power(10., rng.uniform(-6, -2)),
                           "max_lr": np.power(10., rng.uniform(-6, -1)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "linf": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                 "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                 "adam_eps": np.power(10., rng.uniform(-10, -6)),
                 "adam_wd": np.power(10., rng.uniform(-6, -2)),
                 "max_lr": np.power(10., rng.uniform(-6, -1)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "swishk": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                   "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                   "adam_eps": np.power(10., rng.uniform(-10, -6)),
                   "adam_wd": np.power(10., rng.uniform(-6, -2)),
                   "max_lr": np.power(10., rng.uniform(-6, -1)),
                   "cycle_peak": rng.uniform(0.1, 0.5)
                   },
    }


def resnet_fashion_mnist(rng):
    return {
        "relu": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                 "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                 "adam_eps": np.power(10., rng.uniform(-10, -6)),
                 "adam_wd": np.power(10., rng.uniform(-6, -2)),
                 "max_lr": np.power(10., rng.uniform(-6, -1)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "max": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                "adam_eps": np.power(10., rng.uniform(-10, -6)),
                "adam_wd": np.power(10., rng.uniform(-6, -2)),
                "max_lr": np.power(10., rng.uniform(-6, -1)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "multi_relu": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                       "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                       "adam_eps": np.power(10., rng.uniform(-10, -6)),
                       "adam_wd": np.power(10., rng.uniform(-6, -2)),
                       "max_lr": np.power(10., rng.uniform(-6, -1)),
                       "cycle_peak": rng.uniform(0.1, 0.5)
                       },
        "combinact": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                      "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                      "adam_eps": np.power(10., rng.uniform(-10, -6)),
                      "adam_wd": np.power(10., rng.uniform(-6, -2)),
                      "max_lr": np.power(10., rng.uniform(-6, -1)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "l2": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
               "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
               "adam_eps": np.power(10., rng.uniform(-10, -6)),
               "adam_wd": np.power(10., rng.uniform(-6, -2)),
               "max_lr": np.power(10., rng.uniform(-6, -1)),
               "cycle_peak": rng.uniform(0.1, 0.5)
               },
        "abs": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                "adam_eps": np.power(10., rng.uniform(-10, -6)),
                "adam_wd": np.power(10., rng.uniform(-6, -2)),
                "max_lr": np.power(10., rng.uniform(-6, -1)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "l2_lae": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                   "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                   "adam_eps": np.power(10., rng.uniform(-10, -6)),
                   "adam_wd": np.power(10., rng.uniform(-6, -2)),
                   "max_lr": np.power(10., rng.uniform(-6, -1)),
                   "cycle_peak": rng.uniform(0.1, 0.5)
                   },
        "bin_partition_full": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                               "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                               "adam_eps": np.power(10., rng.uniform(-10, -6)),
                               "adam_wd": np.power(10., rng.uniform(-6, -2)),
                               "max_lr": np.power(10., rng.uniform(-6, -1)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "bin_partition_nopass": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                                 "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                                 "adam_eps": np.power(10., rng.uniform(-10, -6)),
                                 "adam_wd": np.power(10., rng.uniform(-6, -2)),
                                 "max_lr": np.power(10., rng.uniform(-6, -1)),
                                 "cycle_peak": rng.uniform(0.1, 0.5)
                                 },
        "bin_all_full": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                         "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                         "adam_eps": np.power(10., rng.uniform(-10, -6)),
                         "adam_wd": np.power(10., rng.uniform(-6, -2)),
                         "max_lr": np.power(10., rng.uniform(-6, -1)),
                         "cycle_peak": rng.uniform(0.1, 0.5)
                         },
        "bin_all_nopass": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                           "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                           "adam_eps": np.power(10., rng.uniform(-10, -6)),
                           "adam_wd": np.power(10., rng.uniform(-6, -2)),
                           "max_lr": np.power(10., rng.uniform(-6, -1)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "bin_all_nopass_sgm": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                               "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                               "adam_eps": np.power(10., rng.uniform(-10, -6)),
                               "adam_wd": np.power(10., rng.uniform(-6, -2)),
                               "max_lr": np.power(10., rng.uniform(-6, -1)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "lse": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                "adam_eps": np.power(10., rng.uniform(-10, -6)),
                "adam_wd": np.power(10., rng.uniform(-6, -2)),
                "max_lr": np.power(10., rng.uniform(-6, -1)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "min": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                "adam_eps": np.power(10., rng.uniform(-10, -6)),
                "adam_wd": np.power(10., rng.uniform(-6, -2)),
                "max_lr": np.power(10., rng.uniform(-6, -1)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "groupsort": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                      "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                      "adam_eps": np.power(10., rng.uniform(-10, -6)),
                      "adam_wd": np.power(10., rng.uniform(-6, -2)),
                      "max_lr": np.power(10., rng.uniform(-6, -1)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "swish": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                  "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                  "adam_eps": np.power(10., rng.uniform(-10, -6)),
                  "adam_wd": np.power(10., rng.uniform(-6, -2)),
                  "max_lr": np.power(10., rng.uniform(-6, -1)),
                  "cycle_peak": rng.uniform(0.1, 0.5)
                  },
        "leaky_relu": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                       "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                       "adam_eps": np.power(10., rng.uniform(-10, -6)),
                       "adam_wd": np.power(10., rng.uniform(-6, -2)),
                       "max_lr": np.power(10., rng.uniform(-6, -1)),
                       "cycle_peak": rng.uniform(0.1, 0.5)
                       },
        "crelu": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                  "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                  "adam_eps": np.power(10., rng.uniform(-10, -6)),
                  "adam_wd": np.power(10., rng.uniform(-6, -2)),
                  "max_lr": np.power(10., rng.uniform(-6, -1)),
                  "cycle_peak": rng.uniform(0.1, 0.5)
                  },
        "attention": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                      "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                      "adam_eps": np.power(10., rng.uniform(-10, -6)),
                      "adam_wd": np.power(10., rng.uniform(-6, -2)),
                      "max_lr": np.power(10., rng.uniform(-6, -1)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "prod": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                 "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                 "adam_eps": np.power(10., rng.uniform(-10, -6)),
                 "adam_wd": np.power(10., rng.uniform(-6, -2)),
                 "max_lr": np.power(10., rng.uniform(-6, -1)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "lae": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                "adam_eps": np.power(10., rng.uniform(-10, -6)),
                "adam_wd": np.power(10., rng.uniform(-6, -2)),
                "max_lr": np.power(10., rng.uniform(-6, -1)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "signed_geomean": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                           "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                           "adam_eps": np.power(10., rng.uniform(-10, -6)),
                           "adam_wd": np.power(10., rng.uniform(-6, -2)),
                           "max_lr": np.power(10., rng.uniform(-6, -1)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "linf": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                 "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                 "adam_eps": np.power(10., rng.uniform(-10, -6)),
                 "adam_wd": np.power(10., rng.uniform(-6, -2)),
                 "max_lr": np.power(10., rng.uniform(-6, -1)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "swishk": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                   "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                   "adam_eps": np.power(10., rng.uniform(-10, -6)),
                   "adam_wd": np.power(10., rng.uniform(-6, -2)),
                   "max_lr": np.power(10., rng.uniform(-6, -1)),
                   "cycle_peak": rng.uniform(0.1, 0.5)
                   },
    }


def resnet_svhn(rng):
    return {
        "relu": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                 "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                 "adam_eps": np.power(10., rng.uniform(-10, -6)),
                 "adam_wd": np.power(10., rng.uniform(-6, -2)),
                 "max_lr": np.power(10., rng.uniform(-6, -1)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "max": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                "adam_eps": np.power(10., rng.uniform(-10, -6)),
                "adam_wd": np.power(10., rng.uniform(-6, -2)),
                "max_lr": np.power(10., rng.uniform(-6, -1)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "multi_relu": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                       "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                       "adam_eps": np.power(10., rng.uniform(-10, -6)),
                       "adam_wd": np.power(10., rng.uniform(-6, -2)),
                       "max_lr": np.power(10., rng.uniform(-6, -1)),
                       "cycle_peak": rng.uniform(0.1, 0.5)
                       },
        "combinact": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                      "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                      "adam_eps": np.power(10., rng.uniform(-10, -6)),
                      "adam_wd": np.power(10., rng.uniform(-6, -2)),
                      "max_lr": np.power(10., rng.uniform(-6, -1)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "l2": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
               "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
               "adam_eps": np.power(10., rng.uniform(-10, -6)),
               "adam_wd": np.power(10., rng.uniform(-6, -2)),
               "max_lr": np.power(10., rng.uniform(-6, -1)),
               "cycle_peak": rng.uniform(0.1, 0.5)
               },
        "abs": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                "adam_eps": np.power(10., rng.uniform(-10, -6)),
                "adam_wd": np.power(10., rng.uniform(-6, -2)),
                "max_lr": np.power(10., rng.uniform(-6, -1)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "l2_lae": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                   "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                   "adam_eps": np.power(10., rng.uniform(-10, -6)),
                   "adam_wd": np.power(10., rng.uniform(-6, -2)),
                   "max_lr": np.power(10., rng.uniform(-6, -1)),
                   "cycle_peak": rng.uniform(0.1, 0.5)
                   },
        "bin_partition_full": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                               "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                               "adam_eps": np.power(10., rng.uniform(-10, -6)),
                               "adam_wd": np.power(10., rng.uniform(-6, -2)),
                               "max_lr": np.power(10., rng.uniform(-6, -1)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "bin_partition_nopass": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                                 "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                                 "adam_eps": np.power(10., rng.uniform(-10, -6)),
                                 "adam_wd": np.power(10., rng.uniform(-6, -2)),
                                 "max_lr": np.power(10., rng.uniform(-6, -1)),
                                 "cycle_peak": rng.uniform(0.1, 0.5)
                                 },
        "bin_all_full": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                         "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                         "adam_eps": np.power(10., rng.uniform(-10, -6)),
                         "adam_wd": np.power(10., rng.uniform(-6, -2)),
                         "max_lr": np.power(10., rng.uniform(-6, -1)),
                         "cycle_peak": rng.uniform(0.1, 0.5)
                         },
        "bin_all_nopass": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                           "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                           "adam_eps": np.power(10., rng.uniform(-10, -6)),
                           "adam_wd": np.power(10., rng.uniform(-6, -2)),
                           "max_lr": np.power(10., rng.uniform(-6, -1)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "bin_all_nopass_sgm": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                               "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                               "adam_eps": np.power(10., rng.uniform(-10, -6)),
                               "adam_wd": np.power(10., rng.uniform(-6, -2)),
                               "max_lr": np.power(10., rng.uniform(-6, -1)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "lse": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                "adam_eps": np.power(10., rng.uniform(-10, -6)),
                "adam_wd": np.power(10., rng.uniform(-6, -2)),
                "max_lr": np.power(10., rng.uniform(-6, -1)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "min": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                "adam_eps": np.power(10., rng.uniform(-10, -6)),
                "adam_wd": np.power(10., rng.uniform(-6, -2)),
                "max_lr": np.power(10., rng.uniform(-6, -1)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "groupsort": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                      "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                      "adam_eps": np.power(10., rng.uniform(-10, -6)),
                      "adam_wd": np.power(10., rng.uniform(-6, -2)),
                      "max_lr": np.power(10., rng.uniform(-6, -1)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "swish": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                  "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                  "adam_eps": np.power(10., rng.uniform(-10, -6)),
                  "adam_wd": np.power(10., rng.uniform(-6, -2)),
                  "max_lr": np.power(10., rng.uniform(-6, -1)),
                  "cycle_peak": rng.uniform(0.1, 0.5)
                  },
        "leaky_relu": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                       "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                       "adam_eps": np.power(10., rng.uniform(-10, -6)),
                       "adam_wd": np.power(10., rng.uniform(-6, -2)),
                       "max_lr": np.power(10., rng.uniform(-6, -1)),
                       "cycle_peak": rng.uniform(0.1, 0.5)
                       },
        "crelu": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                  "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                  "adam_eps": np.power(10., rng.uniform(-10, -6)),
                  "adam_wd": np.power(10., rng.uniform(-6, -2)),
                  "max_lr": np.power(10., rng.uniform(-6, -1)),
                  "cycle_peak": rng.uniform(0.1, 0.5)
                  },
        "attention": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                      "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                      "adam_eps": np.power(10., rng.uniform(-10, -6)),
                      "adam_wd": np.power(10., rng.uniform(-6, -2)),
                      "max_lr": np.power(10., rng.uniform(-6, -1)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "prod": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                 "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                 "adam_eps": np.power(10., rng.uniform(-10, -6)),
                 "adam_wd": np.power(10., rng.uniform(-6, -2)),
                 "max_lr": np.power(10., rng.uniform(-6, -1)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "lae": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                "adam_eps": np.power(10., rng.uniform(-10, -6)),
                "adam_wd": np.power(10., rng.uniform(-6, -2)),
                "max_lr": np.power(10., rng.uniform(-6, -1)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "signed_geomean": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                           "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                           "adam_eps": np.power(10., rng.uniform(-10, -6)),
                           "adam_wd": np.power(10., rng.uniform(-6, -2)),
                           "max_lr": np.power(10., rng.uniform(-6, -1)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "linf": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                 "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                 "adam_eps": np.power(10., rng.uniform(-10, -6)),
                 "adam_wd": np.power(10., rng.uniform(-6, -2)),
                 "max_lr": np.power(10., rng.uniform(-6, -1)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "swishk": {"adam_beta_1": np.power(10., rng.uniform(-3, 0)),
                   "adam_beta_2": np.power(10., rng.uniform(-3, 0)),
                   "adam_eps": np.power(10., rng.uniform(-10, -6)),
                   "adam_wd": np.power(10., rng.uniform(-6, -2)),
                   "max_lr": np.power(10., rng.uniform(-6, -1)),
                   "cycle_peak": rng.uniform(0.1, 0.5)
                   },
    }
