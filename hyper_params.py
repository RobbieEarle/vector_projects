import numpy as np


def get_hyper_params(model, dataset, actfun, rng=None):

    if model == 'nn':
        if dataset == 'mnist':
            return nn_mnist(rng)[actfun]
        elif dataset == 'cifar10':
            return nn_cifar10(rng)[actfun]
        elif dataset == 'cifar100':
            return nn_cifar100(rng)[actfun]
        elif dataset == 'fashion_mnist':
            return nn_fashion_mnist(rng)[actfun]
        elif dataset == 'svhn':
            return nn_svhn(rng)[actfun]
    elif model == 'cnn':
        if dataset == 'mnist':
            return cnn_mnist(rng)[actfun]
        elif dataset == 'cifar10':
            return cnn_cifar10(rng)[actfun]
        elif dataset == 'cifar100':
            return cnn_cifar100(rng)[actfun]
        elif dataset == 'fashion_mnist':
            return cnn_fashion_mnist(rng)[actfun]
        elif dataset == 'svhn':
            return cnn_svhn(rng)[actfun]
    else:
        raise ValueError("Error: No hyper-parameters found for {}, {}".format(model, dataset))


# Opt
def nn_mnist(rng):
    return {
        "relu": {"adam_beta_1": np.exp(-2.375018573261741),
                 "adam_beta_2": np.exp(-6.565065478550015),
                 "adam_eps": np.exp(-19.607731090387627),
                 "adam_wd": np.exp(-11.86635747404571),
                 "max_lr": np.exp(-5.7662952418075175),
                 "cycle_peak": 0.2935155263985412
                 },
        "cf_relu": {"adam_beta_1": np.exp(-4.44857338551192),
                    "adam_beta_2": np.exp(-4.669825410890087),
                    "adam_eps": np.exp(-17.69933166220988),
                    "adam_wd": np.exp(-12.283288733512373),
                    "max_lr": np.exp(-8.563504990329884),
                    "cycle_peak": 0.10393251332079881
                    },
        "multi_relu": {"adam_beta_1": np.exp(-2.859441513546877),
                       "adam_beta_2": np.exp(-5.617992566623951),
                       "adam_eps": np.exp(-20.559015044774018),
                       "adam_wd": np.exp(-12.693844976989661),
                       "max_lr": np.exp(-5.802816398828524),
                       "cycle_peak": 0.28499869111025217
                       },
        "combinact": {"adam_beta_1": np.exp(-2.6436039683427253),
                      "adam_beta_2": np.exp(-7.371516988658699),
                      "adam_eps": np.exp(-16.989022147994522),
                      "adam_wd": np.exp(-12.113778466374383),
                      "max_lr": np.exp(-8),
                      "cycle_peak": 0.4661308739740898
                      },
        "l2": {"adam_beta_1": np.exp(-2.244614412525641),
               "adam_beta_2": np.exp(-5.502197648895974),
               "adam_eps": np.exp(-16.919215725249092),
               "adam_wd": np.exp(-13.99956243808541),
               "max_lr": np.exp(-5.383090612225605),
               "cycle_peak": 0.35037784343793205
               },
        "abs": {"adam_beta_1": np.exp(-3.1576858739457845),
                "adam_beta_2": np.exp(-4.165206705873042),
                "adam_eps": np.exp(-20.430988799955056),
                "adam_wd": np.exp(-13.049933891070697),
                "max_lr": np.exp(-5.809683797646132),
                "cycle_peak": 0.34244342851740034
                },
        "cf_abs": {"adam_beta_1": np.exp(-5.453380890632929),
                   "adam_beta_2": np.exp(-5.879222236954101),
                   "adam_eps": np.exp(-18.303333640483068),
                   "adam_wd": np.exp(-15.152599023560422),
                   "max_lr": np.exp(-6.604045812173043),
                   "cycle_peak": 0.11189158130301018
                   },
        "l2_lae": {"adam_beta_1": np.exp(-2.4561852034212),
                   "adam_beta_2": np.exp(-5.176943480470942),
                   "adam_eps": np.exp(-16.032458209235187),
                   "adam_wd": np.exp(-12.860274699438266),
                   "max_lr": np.exp(-5.540947578537945),
                   "cycle_peak": 0.40750994546983904
                   },
        "max": {"adam_beta_1": np.exp(-2.2169207045481505),
                "adam_beta_2": np.exp(-7.793567052557596),
                "adam_eps": np.exp(-18.23187258333265),
                "adam_wd": np.exp(-12.867866026516422),
                "max_lr": np.exp(-5.416840501318637),
                "cycle_peak": 0.28254869607601146
                },
        "prod": {
            "adam_beta_1": np.exp(rng.uniform(-5.11, -1.64)),
            "adam_beta_2": np.exp(rng.uniform(-10.79, -4.83)),
            "adam_eps": np.exp(rng.uniform(-21.39, -14.26)),
            "adam_wd": np.exp(rng.uniform(-14.04, -8.48)),
            "max_lr": np.exp(rng.uniform(-6.11, -5.38)),
            "cycle_peak": rng.uniform(0.24, 0.51),
        },
        "binary_ops_partition": {
            "adam_beta_1": np.exp(rng.uniform(-4.42, -3.42)),
            "adam_beta_2": np.exp(rng.uniform(-11.02, -7.19)),
            "adam_eps": np.exp(rng.uniform(-21.66, -19.73)),
            "adam_wd": np.exp(rng.uniform(-14.3, -9.34)),
            "max_lr": np.exp(rng.uniform(-6.32, -5.07)),
            "cycle_peak": rng.uniform(0.24, 0.39),
        },
        "binary_ops_all": {
            "adam_beta_1": np.exp(rng.uniform(-4.54, -1.8)),
            "adam_beta_2": np.exp(rng.uniform(-10.25, -5.95)),
            "adam_eps": np.exp(rng.uniform(-20.69, -14.25)),
            "adam_wd": np.exp(rng.uniform(-14.45, -12.52)),
            "max_lr": np.exp(rng.uniform(-5.89, -5.14)),
            "cycle_peak": rng.uniform(0.41, 0.48),
        },
        "lae": {
            "adam_beta_1": np.exp(rng.uniform(-3.73, -2.7)),
            "adam_beta_2": np.exp(rng.uniform(-11.92, -7.13)),
            "adam_eps": np.exp(rng.uniform(-20.96, -15.85)),
            "adam_wd": np.exp(rng.uniform(-15.33, -10.06)),
            "max_lr": np.exp(rng.uniform(-5.77, -4.48)),
            "cycle_peak": rng.uniform(0.08, 0.43),
        },
        "signed_geomean": {
            "adam_beta_1": np.exp(rng.uniform(-4.56, -2.79)),
            "adam_beta_2": np.exp(rng.uniform(-9.87, -6.94)),
            "adam_eps": np.exp(rng.uniform(-21.85, -15.53)),
            "adam_wd": np.exp(rng.uniform(-15.48, -10.29)),
            "max_lr": np.exp(rng.uniform(-5.28, -4.7)),
            "cycle_peak": rng.uniform(0.1, 0.42),
        },
        "linf": {
            "adam_beta_1": np.exp(rng.uniform(-4.47, -2.21)),
            "adam_beta_2": np.exp(rng.uniform(-9.1, -6.68)),
            "adam_eps": np.exp(rng.uniform(-19.4, -18.6)),
            "adam_wd": np.exp(rng.uniform(-12.3, -10.26)),
            "max_lr": np.exp(rng.uniform(-6.23, -4.54)),
            "cycle_peak": rng.uniform(0.27, 0.44),
        },
        "swishk": {
            "adam_beta_1": np.exp(rng.uniform(-2.92, -1.7)),
            "adam_beta_2": np.exp(rng.uniform(-12.45, -10.16)),
            "adam_eps": np.exp(rng.uniform(-17.91, -15.13)),
            "adam_wd": np.exp(rng.uniform(-14.59, -10.0)),
            "max_lr": np.exp(rng.uniform(-6.54, -4.52)),
            "cycle_peak": rng.uniform(0.06, 0.28),
        },
        "lse": {
            "adam_beta_1": np.exp(rng.uniform(-5.36, -2.35)),
            "adam_beta_2": np.exp(rng.uniform(-10.54, -5.78)),
            "adam_eps": np.exp(rng.uniform(-21.42, -14.0)),
            "adam_wd": np.exp(rng.uniform(-14.01, -11.27)),
            "max_lr": np.exp(rng.uniform(-4.86, -4.06)),
            "cycle_peak": rng.uniform(0.25, 0.55),
        },
        "min": {
            "adam_beta_1": np.exp(rng.uniform(-4.57, -3.59)),
            "adam_beta_2": np.exp(rng.uniform(-10.36, -6.26)),
            "adam_eps": np.exp(rng.uniform(-22.75, -15.22)),
            "adam_wd": np.exp(rng.uniform(-14.91, -9.92)),
            "max_lr": np.exp(rng.uniform(-5.57, -4.72)),
            "cycle_peak": rng.uniform(0.13, 0.39),
        }
    }


def nn_cifar10(rng):
    return {
        "relu": {
            "adam_beta_1": np.exp(rng.uniform(-4.92, -1.83)),
            "adam_beta_2": np.exp(rng.uniform(-7.94, -6.61)),
            "adam_eps": np.exp(rng.uniform(-22.98, -15.67)),
            "adam_wd": np.exp(rng.uniform(-13.15, -9.87)),
            "max_lr": np.exp(rng.uniform(-6.11, -5.51)),
            "cycle_peak": rng.uniform(0.19, 0.56),
        },
        "abs": {
            "adam_beta_1": np.exp(rng.uniform(-4.62, -3.19)),
            "adam_beta_2": np.exp(rng.uniform(-10.18, -7.22)),
            "adam_eps": np.exp(rng.uniform(-18.4, -15.45)),
            "adam_wd": np.exp(rng.uniform(-13.04, -11.87)),
            "max_lr": np.exp(rng.uniform(-5.71, -4.38)),
            "cycle_peak": rng.uniform(0.12, 0.35),
        },
        "combinact": {
            "adam_beta_1": np.exp(rng.uniform(-5.3, -0.5)),
            "adam_beta_2": np.exp(rng.uniform(-7.31, -6.13)),
            "adam_eps": np.exp(rng.uniform(-18.84, -14.65)),
            "adam_wd": np.exp(rng.uniform(-15.59, -10.48)),
            "max_lr": np.exp(rng.uniform(-5.66, -4.65)),
            "cycle_peak": rng.uniform(0.27, 0.52),
        },
        "max": {
            "adam_beta_1": np.exp(rng.uniform(-5.44, -2.14)),
            "adam_beta_2": np.exp(rng.uniform(-11.12, -7.5)),
            "adam_eps": np.exp(rng.uniform(-21.67, -13.38)),
            "adam_wd": np.exp(rng.uniform(-14.59, -11.23)),
            "max_lr": np.exp(rng.uniform(-5.96, -4.58)),
            "cycle_peak": rng.uniform(0.06, 0.52),
        },
        "min": {
            "adam_beta_1": np.exp(rng.uniform(-5.28, -2.64)),
            "adam_beta_2": np.exp(rng.uniform(-12.66, -5.65)),
            "adam_eps": np.exp(rng.uniform(-21.35, -17.08)),
            "adam_wd": np.exp(rng.uniform(-12.87, -8.85)),
            "max_lr": np.exp(rng.uniform(-6.08, -5.17)),
            "cycle_peak": rng.uniform(0.31, 0.47),
        },
        "lse": {
            "adam_beta_1": np.exp(rng.uniform(-4.88, -3.5)),
            "adam_beta_2": np.exp(rng.uniform(-7.78, -6.28)),
            "adam_eps": np.exp(rng.uniform(-21.98, -18.88)),
            "adam_wd": np.exp(rng.uniform(-14.89, -12.31)),
            "max_lr": np.exp(rng.uniform(-6.14, -4.98)),
            "cycle_peak": rng.uniform(0.13, 0.55),
        },
        "lae": {
            "adam_beta_1": np.exp(rng.uniform(-4.41, -0.73)),
            "adam_beta_2": np.exp(rng.uniform(-9.06, -5.42)),
            "adam_eps": np.exp(rng.uniform(-21.61, -17.54)),
            "adam_wd": np.exp(rng.uniform(-14.39, -12.97)),
            "max_lr": np.exp(rng.uniform(-6.16, -4.66)),
            "cycle_peak": rng.uniform(0.14, 0.44),
        },
        "l2": {
            "adam_beta_1": np.exp(rng.uniform(-3.72, -1.04)),
            "adam_beta_2": np.exp(rng.uniform(-8.8, -6.0)),
            "adam_eps": np.exp(rng.uniform(-20.61, -14.26)),
            "adam_wd": np.exp(rng.uniform(-14.55, -11.48)),
            "max_lr": np.exp(rng.uniform(-5.57, -4.33)),
            "cycle_peak": rng.uniform(0.17, 0.49),
        },
        "linf": {
            "adam_beta_1": np.exp(rng.uniform(-5.01, -2.79)),
            "adam_beta_2": np.exp(rng.uniform(-11.95, -6.26)),
            "adam_eps": np.exp(rng.uniform(-20.6, -16.8)),
            "adam_wd": np.exp(rng.uniform(-14.36, -8.23)),
            "max_lr": np.exp(rng.uniform(-6.12, -4.55)),
            "cycle_peak": rng.uniform(0.36, 0.47),
        },
        "prod": {
            "adam_beta_1": np.exp(rng.uniform(-5.67, -2.07)),
            "adam_beta_2": np.exp(rng.uniform(-11.6, -8.32)),
            "adam_eps": np.exp(rng.uniform(-19.6, -15.76)),
            "adam_wd": np.exp(rng.uniform(-15.15, -13.91)),
            "max_lr": np.exp(rng.uniform(-5.52, -5.09)),
            "cycle_peak": rng.uniform(0.24, 0.44),
        },
        "signed_geomean": {
            "adam_beta_1": np.exp(rng.uniform(-3.35, -2.7)),
            "adam_beta_2": np.exp(rng.uniform(-10.64, -7.09)),
            "adam_eps": np.exp(rng.uniform(-17.8, -14.92)),
            "adam_wd": np.exp(rng.uniform(-13.37, -11.36)),
            "max_lr": np.exp(rng.uniform(-5.54, -4.35)),
            "cycle_peak": rng.uniform(0.09, 0.46),
        },
        "swishk": {
            "adam_beta_1": np.exp(rng.uniform(-4.75, -1.57)),
            "adam_beta_2": np.exp(rng.uniform(-11.25, -6.44)),
            "adam_eps": np.exp(rng.uniform(-22.63, -17.26)),
            "adam_wd": np.exp(rng.uniform(-14.44, -11.05)),
            "max_lr": np.exp(rng.uniform(-5.8, -4.36)),
            "cycle_peak": rng.uniform(0.32, 0.51),
        },
        "binary_ops_partition": {
            "adam_beta_1": np.exp(rng.uniform(-4.49, -4.26)),
            "adam_beta_2": np.exp(rng.uniform(-10.0, -7.74)),
            "adam_eps": np.exp(rng.uniform(-20.32, -17.09)),
            "adam_wd": np.exp(rng.uniform(-15.25, -11.58)),
            "max_lr": np.exp(rng.uniform(-5.9, -5.58)),
            "cycle_peak": rng.uniform(0.21, 0.45),
        },
        "binary_ops_all": {
            "adam_beta_1": np.exp(rng.uniform(-4.35, -2.06)),
            "adam_beta_2": np.exp(rng.uniform(-9.76, -7.42)),
            "adam_eps": np.exp(rng.uniform(-19.03, -15.38)),
            "adam_wd": np.exp(rng.uniform(-13.2, -9.57)),
            "max_lr": np.exp(rng.uniform(-5.73, -5.21)),
            "cycle_peak": rng.uniform(0.17, 0.42),
        }
    }


def nn_cifar100(rng):
    return {
        "relu": {
            "adam_beta_1": np.exp(rng.uniform(-5.38, -2.72)),
            "adam_beta_2": np.exp(rng.uniform(-9.78, -5.48)),
            "adam_eps": np.exp(rng.uniform(-22.49, -16.79)),
            "adam_wd": np.exp(rng.uniform(-13.89, -10.42)),
            "max_lr": np.exp(rng.uniform(-6.24, -5.24)),
            "cycle_peak": rng.uniform(0.36, 0.51),
        },
        "abs": {
            "adam_beta_1": np.exp(rng.uniform(-3.51, -1.16)),
            "adam_beta_2": np.exp(rng.uniform(-8.6, -6.42)),
            "adam_eps": np.exp(rng.uniform(-18.86, -14.28)),
            "adam_wd": np.exp(rng.uniform(-13.94, -10.07)),
            "max_lr": np.exp(rng.uniform(-5.76, -4.44)),
            "cycle_peak": rng.uniform(0.21, 0.33),
        },
        "combinact": {
            "adam_beta_1": np.exp(rng.uniform(-1.31, -0.34)),
            "adam_beta_2": np.exp(rng.uniform(-7.07, -6.0)),
            "adam_eps": np.exp(rng.uniform(-22.38, -18.36)),
            "adam_wd": np.exp(rng.uniform(-13.28, -10.54)),
            "max_lr": np.exp(rng.uniform(-6.46, -4.74)),
            "cycle_peak": rng.uniform(0.09, 0.39),
        },
        "max": {
            "adam_beta_1": np.exp(rng.uniform(-2.29, -0.94)),
            "adam_beta_2": np.exp(rng.uniform(-9.32, -5.73)),
            "adam_eps": np.exp(rng.uniform(-22.49, -15.17)),
            "adam_wd": np.exp(rng.uniform(-14.62, -13.57)),
            "max_lr": np.exp(rng.uniform(-5.64, -4.63)),
            "cycle_peak": rng.uniform(0.2, 0.3),
        },
        "min": {
            "adam_beta_1": np.exp(rng.uniform(-2.53, -1.97)),
            "adam_beta_2": np.exp(rng.uniform(-11.01, -5.82)),
            "adam_eps": np.exp(rng.uniform(-21.33, -19.62)),
            "adam_wd": np.exp(rng.uniform(-14.87, -10.72)),
            "max_lr": np.exp(rng.uniform(-5.72, -4.62)),
            "cycle_peak": rng.uniform(0.04, 0.46),
        },
        "lse": {
            "adam_beta_1": np.exp(rng.uniform(-2.07, -0.04)),
            "adam_beta_2": np.exp(rng.uniform(-9.23, -5.66)),
            "adam_eps": np.exp(rng.uniform(-21.21, -20.61)),
            "adam_wd": np.exp(rng.uniform(-13.72, -11.32)),
            "max_lr": np.exp(rng.uniform(-6.0, -4.0)),
            "cycle_peak": rng.uniform(0.11, 0.48),
        },
        "lae": {
            "adam_beta_1": np.exp(rng.uniform(-1.53, -0.42)),
            "adam_beta_2": np.exp(rng.uniform(-8.54, -5.96)),
            "adam_eps": np.exp(rng.uniform(-22.0, -17.33)),
            "adam_wd": np.exp(rng.uniform(-14.94, -12.42)),
            "max_lr": np.exp(rng.uniform(-5.89, -5.12)),
            "cycle_peak": rng.uniform(0.1, 0.44),
        },
        "l2": {
            "adam_beta_1": np.exp(rng.uniform(-2.13, -0.73)),
            "adam_beta_2": np.exp(rng.uniform(-8.96, -6.5)),
            "adam_eps": np.exp(rng.uniform(-22.93, -15.42)),
            "adam_wd": np.exp(rng.uniform(-13.46, -10.57)),
            "max_lr": np.exp(rng.uniform(-5.61, -4.93)),
            "cycle_peak": rng.uniform(0.07, 0.44),
        },
        "linf": {
            "adam_beta_1": np.exp(rng.uniform(-5.3, -1.79)),
            "adam_beta_2": np.exp(rng.uniform(-10.33, -6.48)),
            "adam_eps": np.exp(rng.uniform(-21.64, -15.32)),
            "adam_wd": np.exp(rng.uniform(-11.36, -9.27)),
            "max_lr": np.exp(rng.uniform(-5.91, -4.98)),
            "cycle_peak": rng.uniform(0.32, 0.41),
        },
        "prod": {
            "adam_beta_1": np.exp(rng.uniform(-1.61, 0.24)),
            "adam_beta_2": np.exp(rng.uniform(-9.58, -6.79)),
            "adam_eps": np.exp(rng.uniform(-22.09, -16.18)),
            "adam_wd": np.exp(rng.uniform(-14.52, -11.62)),
            "max_lr": np.exp(rng.uniform(-5.73, -5.41)),
            "cycle_peak": rng.uniform(0.28, 0.44),
        },
        "signed_geomean": {
            "adam_beta_1": np.exp(rng.uniform(-1.65, -1.32)),
            "adam_beta_2": np.exp(rng.uniform(-9.9, -6.66)),
            "adam_eps": np.exp(rng.uniform(-21.1, -16.59)),
            "adam_wd": np.exp(rng.uniform(-15.18, -12.15)),
            "max_lr": np.exp(rng.uniform(-6.25, -4.88)),
            "cycle_peak": rng.uniform(0.13, 0.38),
        },
        "swishk": {
            "adam_beta_1": np.exp(rng.uniform(-1.33, -0.26)),
            "adam_beta_2": np.exp(rng.uniform(-8.26, -5.72)),
            "adam_eps": np.exp(rng.uniform(-22.39, -15.59)),
            "adam_wd": np.exp(rng.uniform(-14.54, -12.8)),
            "max_lr": np.exp(rng.uniform(-4.92, -4.62)),
            "cycle_peak": rng.uniform(0.3, 0.34),
        },
        "binary_ops_partition": {
            "adam_beta_1": np.exp(rng.uniform(-2.36, -0.47)),
            "adam_beta_2": np.exp(rng.uniform(-8.67, -5.64)),
            "adam_eps": np.exp(rng.uniform(-19.38, -15.9)),
            "adam_wd": np.exp(rng.uniform(-12.62, -9.67)),
            "max_lr": np.exp(rng.uniform(-5.96, -5.83)),
            "cycle_peak": rng.uniform(0.13, 0.28),
        },
        "binary_ops_all": {
            "adam_beta_1": np.exp(rng.uniform(-2.86, -1.99)),
            "adam_beta_2": np.exp(rng.uniform(-10.37, -7.26)),
            "adam_eps": np.exp(rng.uniform(-17.68, -16.13)),
            "adam_wd": np.exp(rng.uniform(-14.54, -8.63)),
            "max_lr": np.exp(rng.uniform(-5.84, -4.79)),
            "cycle_peak": rng.uniform(0.15, 0.22),
        },
    }


def nn_fashion_mnist(rng):
    return {
        "relu": {
            "adam_beta_1": np.exp(rng.uniform(-4.99, -1.84)),
            "adam_beta_2": np.exp(rng.uniform(-7.89, -6.14)),
            "adam_eps": np.exp(rng.uniform(-23.02, -15.93)),
            "adam_wd": np.exp(rng.uniform(-13.93, -11.07)),
            "max_lr": np.exp(rng.uniform(-6.07, -4.95)),
            "cycle_peak": rng.uniform(0.18, 0.55),
        },
        "abs": {
            "adam_beta_1": np.exp(rng.uniform(-4.76, -2.62)),
            "adam_beta_2": np.exp(rng.uniform(-9.15, -6.74)),
            "adam_eps": np.exp(rng.uniform(-20.94, -16.14)),
            "adam_wd": np.exp(rng.uniform(-13.82, -9.02)),
            "max_lr": np.exp(rng.uniform(-6.19, -5.29)),
            "cycle_peak": rng.uniform(0.23, 0.46),
        },
        "combinact": {
            "adam_beta_1": np.exp(rng.uniform(-2.81, -1.24)),
            "adam_beta_2": np.exp(rng.uniform(-10.12, -5.6)),
            "adam_eps": np.exp(rng.uniform(-19.55, -14.14)),
            "adam_wd": np.exp(rng.uniform(-15.03, -13.24)),
            "max_lr": np.exp(rng.uniform(-5.48, -5.07)),
            "cycle_peak": rng.uniform(0.04, 0.53),
        },
        "max": {
            "adam_beta_1": np.exp(rng.uniform(-3.53, -2.11)),
            "adam_beta_2": np.exp(rng.uniform(-10.82, -6.07)),
            "adam_eps": np.exp(rng.uniform(-21.75, -17.62)),
            "adam_wd": np.exp(rng.uniform(-14.81, -13.42)),
            "max_lr": np.exp(rng.uniform(-5.77, -4.56)),
            "cycle_peak": rng.uniform(0.24, 0.3),
        },
        "min": {
            "adam_beta_1": np.exp(rng.uniform(-5.31, -2.42)),
            "adam_beta_2": np.exp(rng.uniform(-13.25, -6.26)),
            "adam_eps": np.exp(rng.uniform(-21.38, -15.88)),
            "adam_wd": np.exp(rng.uniform(-12.61, -10.04)),
            "max_lr": np.exp(rng.uniform(-5.99, -5.4)),
            "cycle_peak": rng.uniform(0.26, 0.4),
        },
        "lse": {
            "adam_beta_1": np.exp(rng.uniform(-5.07, -4.04)),
            "adam_beta_2": np.exp(rng.uniform(-9.96, -5.48)),
            "adam_eps": np.exp(rng.uniform(-21.58, -17.2)),
            "adam_wd": np.exp(rng.uniform(-14.36, -12.41)),
            "max_lr": np.exp(rng.uniform(-5.44, -4.06)),
            "cycle_peak": rng.uniform(0.14, 0.56),
        },
        "lae": {
            "adam_beta_1": np.exp(rng.uniform(-3.72, -1.41)),
            "adam_beta_2": np.exp(rng.uniform(-11.23, -5.59)),
            "adam_eps": np.exp(rng.uniform(-19.38, -15.04)),
            "adam_wd": np.exp(rng.uniform(-14.78, -12.32)),
            "max_lr": np.exp(rng.uniform(-5.24, -4.38)),
            "cycle_peak": rng.uniform(0.33, 0.46),
        },
        "l2": {
            "adam_beta_1": np.exp(rng.uniform(-5.43, -2.33)),
            "adam_beta_2": np.exp(rng.uniform(-11.25, -6.1)),
            "adam_eps": np.exp(rng.uniform(-19.5, -16.14)),
            "adam_wd": np.exp(rng.uniform(-11.5, -9.98)),
            "max_lr": np.exp(rng.uniform(-6.11, -5.43)),
            "cycle_peak": rng.uniform(0.25, 0.37),
        },
        "linf": {
            "adam_beta_1": np.exp(rng.uniform(-3.37, -2.69)),
            "adam_beta_2": np.exp(rng.uniform(-12.0, -5.93)),
            "adam_eps": np.exp(rng.uniform(-19.97, -16.91)),
            "adam_wd": np.exp(rng.uniform(-13.99, -11.55)),
            "max_lr": np.exp(rng.uniform(-6.05, -4.6)),
            "cycle_peak": rng.uniform(0.09, 0.43),
        },
        "prod": {
            "adam_beta_1": np.exp(rng.uniform(-5.66, -1.56)),
            "adam_beta_2": np.exp(rng.uniform(-12.22, -6.22)),
            "adam_eps": np.exp(rng.uniform(-21.69, -15.33)),
            "adam_wd": np.exp(rng.uniform(-15.58, -10.8)),
            "max_lr": np.exp(rng.uniform(-5.99, -5.31)),
            "cycle_peak": rng.uniform(0.18, 0.38),
        },
        "signed_geomean": {
            "adam_beta_1": np.exp(rng.uniform(-4.93, -2.13)),
            "adam_beta_2": np.exp(rng.uniform(-11.48, -6.26)),
            "adam_eps": np.exp(rng.uniform(-17.55, -15.16)),
            "adam_wd": np.exp(rng.uniform(-13.93, -11.44)),
            "max_lr": np.exp(rng.uniform(-5.79, -5.28)),
            "cycle_peak": rng.uniform(0.19, 0.46),
        },
        "swishk": {
            "adam_beta_1": np.exp(rng.uniform(-2.18, -0.83)),
            "adam_beta_2": np.exp(rng.uniform(-9.77, -7.07)),
            "adam_eps": np.exp(rng.uniform(-17.79, -14.25)),
            "adam_wd": np.exp(rng.uniform(-14.63, -12.95)),
            "max_lr": np.exp(rng.uniform(-5.24, -4.69)),
            "cycle_peak": rng.uniform(0.26, 0.48),
        },
        "binary_ops_partition": {
            "adam_beta_1": np.exp(rng.uniform(-5.36, -2.49)),
            "adam_beta_2": np.exp(rng.uniform(-10.04, -7.47)),
            "adam_eps": np.exp(rng.uniform(-19.7, -16.76)),
            "adam_wd": np.exp(rng.uniform(-14.89, -11.43)),
            "max_lr": np.exp(rng.uniform(-5.99, -5.59)),
            "cycle_peak": rng.uniform(0.16, 0.45),
        },
        "binary_ops_all": {
            "adam_beta_1": np.exp(rng.uniform(-3.73, -2.96)),
            "adam_beta_2": np.exp(rng.uniform(-11.57, -5.64)),
            "adam_eps": np.exp(rng.uniform(-19.22, -15.21)),
            "adam_wd": np.exp(rng.uniform(-14.7, -10.61)),
            "max_lr": np.exp(rng.uniform(-6.07, -5.17)),
            "cycle_peak": rng.uniform(0.12, 0.39),
        }
    }


def nn_svhn(rng):
    return {
        "relu": {
            "adam_beta_1": np.exp(rng.uniform(-5.02, -3.33)),
            "adam_beta_2": np.exp(rng.uniform(-10.88, -5.78)),
            "adam_eps": np.exp(rng.uniform(-22.46, -17.78)),
            "adam_wd": np.exp(rng.uniform(-14.32, -10.37)),
            "max_lr": np.exp(rng.uniform(-6.12, -5.5)),
            "cycle_peak": rng.uniform(0.25, 0.57),
        },
        "abs": {
            "adam_beta_1": np.exp(rng.uniform(-4.79, -2.88)),
            "adam_beta_2": np.exp(rng.uniform(-10.84, -9.42)),
            "adam_eps": np.exp(rng.uniform(-21.92, -16.97)),
            "adam_wd": np.exp(rng.uniform(-12.61, -12.01)),
            "max_lr": np.exp(rng.uniform(-6.14, -5.22)),
            "cycle_peak": rng.uniform(0.15, 0.42),
        },
        "combinact": {
            "adam_beta_1": np.exp(rng.uniform(-3.68, -1.63)),
            "adam_beta_2": np.exp(rng.uniform(-8.94, -5.73)),
            "adam_eps": np.exp(rng.uniform(-22.32, -14.13)),
            "adam_wd": np.exp(rng.uniform(-14.94, -12.87)),
            "max_lr": np.exp(rng.uniform(-6.04, -5.18)),
            "cycle_peak": rng.uniform(0.4, 0.49),
        },
        "max": {
            "adam_beta_1": np.exp(rng.uniform(-3.37, -2.77)),
            "adam_beta_2": np.exp(rng.uniform(-10.43, -6.43)),
            "adam_eps": np.exp(rng.uniform(-22.5, -17.12)),
            "adam_wd": np.exp(rng.uniform(-15.05, -12.15)),
            "max_lr": np.exp(rng.uniform(-6.02, -4.59)),
            "cycle_peak": rng.uniform(0.17, 0.33),
        },
        "min": {
            "adam_beta_1": np.exp(rng.uniform(-4.17, -3.04)),
            "adam_beta_2": np.exp(rng.uniform(-11.31, -5.94)),
            "adam_eps": np.exp(rng.uniform(-20.2, -15.02)),
            "adam_wd": np.exp(rng.uniform(-14.09, -11.47)),
            "max_lr": np.exp(rng.uniform(-5.69, -4.6)),
            "cycle_peak": rng.uniform(0.09, 0.41),
        },
        "lse": {
            "adam_beta_1": np.exp(rng.uniform(-4.88, -4.2)),
            "adam_beta_2": np.exp(rng.uniform(-8.69, -6.46)),
            "adam_eps": np.exp(rng.uniform(-22.15, -18.61)),
            "adam_wd": np.exp(rng.uniform(-14.32, -13.19)),
            "max_lr": np.exp(rng.uniform(-5.64, -4.86)),
            "cycle_peak": rng.uniform(0.08, 0.48),
        },
        "lae": {
            "adam_beta_1": np.exp(rng.uniform(-4.14, -2.02)),
            "adam_beta_2": np.exp(rng.uniform(-11.75, -5.24)),
            "adam_eps": np.exp(rng.uniform(-19.13, -16.54)),
            "adam_wd": np.exp(rng.uniform(-14.83, -12.3)),
            "max_lr": np.exp(rng.uniform(-5.03, -4.39)),
            "cycle_peak": rng.uniform(0.3, 0.48),
        },
        "l2": {
            "adam_beta_1": np.exp(rng.uniform(-3.4, -1.46)),
            "adam_beta_2": np.exp(rng.uniform(-7.95, -6.15)),
            "adam_eps": np.exp(rng.uniform(-21.39, -14.16)),
            "adam_wd": np.exp(rng.uniform(-15.29, -10.18)),
            "max_lr": np.exp(rng.uniform(-5.89, -4.76)),
            "cycle_peak": rng.uniform(0.29, 0.47),
        },
        "linf": {
            "adam_beta_1": np.exp(rng.uniform(-3.52, -2.68)),
            "adam_beta_2": np.exp(rng.uniform(-12.59, -6.67)),
            "adam_eps": np.exp(rng.uniform(-19.24, -15.69)),
            "adam_wd": np.exp(rng.uniform(-13.77, -10.72)),
            "max_lr": np.exp(rng.uniform(-6.02, -4.71)),
            "cycle_peak": rng.uniform(0.29, 0.39),
        },
        "prod": {
            "adam_beta_1": np.exp(rng.uniform(-5.84, -1.76)),
            "adam_beta_2": np.exp(rng.uniform(-11.82, -7.91)),
            "adam_eps": np.exp(rng.uniform(-19.95, -15.75)),
            "adam_wd": np.exp(rng.uniform(-15.95, -10.83)),
            "max_lr": np.exp(rng.uniform(-5.87, -5.13)),
            "cycle_peak": rng.uniform(0.22, 0.44),
        },
        "signed_geomean": {
            "adam_beta_1": np.exp(rng.uniform(-5.07, -2.81)),
            "adam_beta_2": np.exp(rng.uniform(-12.33, -6.76)),
            "adam_eps": np.exp(rng.uniform(-16.81, -15.15)),
            "adam_wd": np.exp(rng.uniform(-14.01, -11.24)),
            "max_lr": np.exp(rng.uniform(-5.68, -5.22)),
            "cycle_peak": rng.uniform(0.22, 0.46),
        },
        "swishk": {
            "adam_beta_1": np.exp(rng.uniform(-2.88, -1.18)),
            "adam_beta_2": np.exp(rng.uniform(-9.53, -6.46)),
            "adam_eps": np.exp(rng.uniform(-22.28, -14.22)),
            "adam_wd": np.exp(rng.uniform(-14.85, -12.98)),
            "max_lr": np.exp(rng.uniform(-5.4, -4.45)),
            "cycle_peak": rng.uniform(0.35, 0.52),
        },
        "binary_ops_partition": {
            "adam_beta_1": np.exp(rng.uniform(-4.37, -4.22)),
            "adam_beta_2": np.exp(rng.uniform(-10.43, -6.16)),
            "adam_eps": np.exp(rng.uniform(-19.96, -17.78)),
            "adam_wd": np.exp(rng.uniform(-15.07, -11.57)),
            "max_lr": np.exp(rng.uniform(-6.06, -5.41)),
            "cycle_peak": rng.uniform(0.19, 0.42),
        },
        "binary_ops_all": {
            "adam_beta_1": np.exp(rng.uniform(-4.22, -2.72)),
            "adam_beta_2": np.exp(rng.uniform(-10.17, -6.44)),
            "adam_eps": np.exp(rng.uniform(-18.81, -14.28)),
            "adam_wd": np.exp(rng.uniform(-14.48, -10.38)),
            "max_lr": np.exp(rng.uniform(-5.89, -5.06)),
            "cycle_peak": rng.uniform(0.21, 0.45),
        }
    }


# Opt
def cnn_mnist(rng):
    return {
        "relu": {"adam_beta_1": np.exp(-2.388609721693893),
                 "adam_beta_2": np.exp(-5.390639433192069),
                 "adam_eps": np.exp(-16.796444850789),
                 "adam_wd": np.exp(-13.253336539963065),
                 "max_lr": np.exp(-7.422704622466667),
                 "cycle_peak": 0.44656736904941696
                 },
        "multi_relu": {"adam_beta_1": np.exp(-3.0574547429631496),
                       "adam_beta_2": np.exp(-4.247448624972093),
                       "adam_eps": np.exp(-19.92328795485814),
                       "adam_wd": np.exp(-12.591192480548075),
                       "max_lr": np.exp(-7.183540698498811),
                       "cycle_peak": 0.1847688059239794
                       },
        "combinact": {"adam_beta_1": np.exp(-2.114439459425412),
                      "adam_beta_2": np.exp(-5.354100834352032),
                      "adam_eps": np.exp(-20.485014830268515),
                      "adam_wd": np.exp(-13.947985139710585),
                      "max_lr": np.exp(-6.710677476450968),
                      "cycle_peak": 0.45592998059813267
                      },
        "l2": {"adam_beta_1": np.exp(-2.798405250416228),
               "adam_beta_2": np.exp(-4.852502321085275),
               "adam_eps": np.exp(-17.69422318951969),
               "adam_wd": np.exp(-13.28251690242802),
               "max_lr": np.exp(-6.61986865125839),
               "cycle_peak": 0.2908993031473296
               },
        "abs": {"adam_beta_1": np.exp(-2.3046899444891737),
                "adam_beta_2": np.exp(-4.081976310255959),
                "adam_eps": np.exp(-18.81496719551105),
                "adam_wd": np.exp(-12.889583720257814),
                "max_lr": np.exp(-6.294826015471599),
                "cycle_peak": 0.43927944846465605
                },
        "l2_lae": {"adam_beta_1": np.exp(-3.819899346335893),
                   "adam_beta_2": np.exp(-4.187621156111093),
                   "adam_eps": np.exp(-15.889624513084568),
                   "adam_wd": np.exp(-13.735330355123828),
                   "max_lr": np.exp(-6.796509116066224),
                   "cycle_peak": 0.30452694109961825
                   },
        "max": {"adam_beta_1": np.exp(-3.0681674156782175),
                "adam_beta_2": np.exp(-4.08491441310968),
                "adam_eps": np.exp(-16.879716225530277),
                "adam_wd": np.exp(-12.851561693962033),
                "max_lr": np.exp(-5.689213936356616),
                "cycle_peak": 0.3131204615398092
                },
        "prod": {
            "adam_beta_1": np.exp(rng.uniform(-3.27, -2.03)),
            "adam_beta_2": np.exp(rng.uniform(-9.74, -5.14)),
            "adam_eps": np.exp(rng.uniform(-20.94, -14.17)),
            "adam_wd": np.exp(rng.uniform(-15.12, -12.71)),
            "max_lr": np.exp(rng.uniform(-8, -4.71)),
            "cycle_peak": rng.uniform(0.18, 0.54),
        },
        "binary_ops_partition": {
            "adam_beta_1": np.exp(rng.uniform(-4.65, -4.13)),
            "adam_beta_2": np.exp(rng.uniform(-11.05, -5.54)),
            "adam_eps": np.exp(rng.uniform(-20.86, -16.15)),
            "adam_wd": np.exp(rng.uniform(-12.8, -10.94)),
            "max_lr": np.exp(rng.uniform(-8, -5.58)),
            "cycle_peak": rng.uniform(0.18, 0.49),
        },
        "binary_ops_all": {
            "adam_beta_1": np.exp(rng.uniform(-4.84, -4.02)),
            "adam_beta_2": np.exp(rng.uniform(-9.64, -5.93)),
            "adam_eps": np.exp(rng.uniform(-21.96, -18.21)),
            "adam_wd": np.exp(rng.uniform(-12.1, -9.81)),
            "max_lr": np.exp(rng.uniform(-8, -2.56)),
            "cycle_peak": rng.uniform(0.2, 0.4),
        },
        "lae": {
            "adam_beta_1": np.exp(rng.uniform(-5.17, -3.34)),
            "adam_beta_2": np.exp(rng.uniform(-11.19, -7.01)),
            "adam_eps": np.exp(rng.uniform(-21.99, -14.2)),
            "adam_wd": np.exp(rng.uniform(-15.19, -12.24)),
            "max_lr": np.exp(rng.uniform(-8, -4.23)),
            "cycle_peak": rng.uniform(0.12, 0.56),
        },
        "signed_geomean": {
            "adam_beta_1": np.exp(rng.uniform(-4.99, -3.46)),
            "adam_beta_2": np.exp(rng.uniform(-12.69, -5.89)),
            "adam_eps": np.exp(rng.uniform(-19.8, -17.34)),
            "adam_wd": np.exp(rng.uniform(-12.99, -9.18)),
            "max_lr": np.exp(rng.uniform(-8, -5.08)),
            "cycle_peak": rng.uniform(0.32, 0.44),
        },
        "linf": {
            "adam_beta_1": np.exp(rng.uniform(-5.27, -3.68)),
            "adam_beta_2": np.exp(rng.uniform(-11.32, -6.68)),
            "adam_eps": np.exp(rng.uniform(-20.66, -15.74)),
            "adam_wd": np.exp(rng.uniform(-12.93, -9.8)),
            "max_lr": np.exp(rng.uniform(-8, -5.48)),
            "cycle_peak": rng.uniform(0.2, 0.39),
        },
        "swishk": {
            "adam_beta_1": np.exp(rng.uniform(-3.25, -1.82)),
            "adam_beta_2": np.exp(rng.uniform(-10.65, -7.32)),
            "adam_eps": np.exp(rng.uniform(-19.81, -15.54)),
            "adam_wd": np.exp(rng.uniform(-13.0, -9.86)),
            "max_lr": np.exp(rng.uniform(-8, -5.6)),
            "cycle_peak": rng.uniform(0.09, 0.43),
        },
        "lse": {
            "adam_beta_1": np.exp(rng.uniform(-4.66, -4.04)),
            "adam_beta_2": np.exp(rng.uniform(-8.08, -6.05)),
            "adam_eps": np.exp(rng.uniform(-21.53, -18.83)),
            "adam_wd": np.exp(rng.uniform(-14.82, -12.33)),
            "max_lr": np.exp(rng.uniform(-8, -4.15)),
            "cycle_peak": rng.uniform(0.12, 0.54),
        },
        "min": {
            "adam_beta_1": np.exp(rng.uniform(-4.85, -4.16)),
            "adam_beta_2": np.exp(rng.uniform(-9.55, -8.3)),
            "adam_eps": np.exp(rng.uniform(-21.56, -19.57)),
            "adam_wd": np.exp(rng.uniform(-13.59, -9.92)),
            "max_lr": np.exp(rng.uniform(-8, -5.09)),
            "cycle_peak": rng.uniform(0.12, 0.36),
        },
    }


# Opt
def cnn_cifar10(rng):
    return {
        "relu": {"adam_beta_1": np.exp(-2.2190390756250093),
                 "adam_beta_2": np.exp(-7.366914026786562),
                 "adam_eps": np.exp(-18.10735819580839),
                 "adam_wd": np.exp(-12.13318302542048),
                 "max_lr": np.exp(-7.467215859430617),
                 "cycle_peak": 0.49156736259596534
                 },
        "multi_relu": {"adam_beta_1": np.exp(-2.3543718655934547),
                       "adam_beta_2": np.exp(-7.063659565937045),
                       "adam_eps": np.exp(-19.22492182089545),
                       "adam_wd": np.exp(-10.269718286116909),
                       "max_lr": np.exp(-6.8770611857136075),
                       "cycle_peak": 0.4253002234015769
                       },
        "combinact": {"adam_beta_1": np.exp(-2.016683834468364),
                      "adam_beta_2": np.exp(-7.820800773443709),
                      "adam_eps": np.exp(-18.01936303461807),
                      "adam_wd": np.exp(-14.443234599437305),
                      "max_lr": np.exp(-6.7810979033379875),
                      "cycle_peak": 0.5439417885046983
                      },
        "l2": {"adam_beta_1": np.exp(-1.5749000540594622),
               "adam_beta_2": np.exp(-3.6702433473885767),
               "adam_eps": np.exp(-17.788820155080888),
               "adam_wd": np.exp(-14.297423169143356),
               "max_lr": np.exp(-7.246379919517856),
               "cycle_peak": 0.4721781379107825
               },
        "abs": {"adam_beta_1": np.exp(-2.13818391159692),
                "adam_beta_2": np.exp(-5.343641237772224),
                "adam_eps": np.exp(-20.681560434670658),
                "adam_wd": np.exp(-13.95451768488049),
                "max_lr": np.exp(-6.719724510164729),
                "cycle_peak": 0.4296646156803744
                },
        "l2_lae": {"adam_beta_1": np.exp(-1.511652530521991),
                   "adam_beta_2": np.exp(-5.10036591613782),
                   "adam_eps": np.exp(-20.158860548398614),
                   "adam_wd": np.exp(-11.630968574087534),
                   "max_lr": np.exp(-6.992522933149952),
                   "cycle_peak": 0.41503241211381126
                   },
        "max": {"adam_beta_1": np.exp(-2.3151753028565794),
                "adam_beta_2": np.exp(-4.660984944761118),
                "adam_eps": np.exp(-19.231174065933367),
                "adam_wd": np.exp(-8.028370292260313),
                "max_lr": np.exp(-6.720521846837062),
                "cycle_peak": 0.4677382752348381
                },
        "prod": {
            "adam_beta_1": np.exp(rng.uniform(-4.93, -2.91)),
            "adam_beta_2": np.exp(rng.uniform(-8.94, -5.92)),
            "adam_eps": np.exp(rng.uniform(-21.71, -16.2)),
            "adam_wd": np.exp(rng.uniform(-14.05, -10.77)),
            "max_lr": np.exp(rng.uniform(-8, -4.62)),
            "cycle_peak": rng.uniform(0.1, 0.53),
        },
        "binary_ops_partition": {
            "adam_beta_1": np.exp(rng.uniform(-4.81, -4.13)),
            "adam_beta_2": np.exp(rng.uniform(-10.41, -5.54)),
            "adam_eps": np.exp(rng.uniform(-19.89, -16.37)),
            "adam_wd": np.exp(rng.uniform(-12.75, -10.41)),
            "max_lr": np.exp(rng.uniform(-8, -5.69)),
            "cycle_peak": rng.uniform(0.25, 0.56),
        },
        "binary_ops_all": {
            "adam_beta_1": np.exp(rng.uniform(-4.17, -1.56)),
            "adam_beta_2": np.exp(rng.uniform(-9.68, -5.56)),
            "adam_eps": np.exp(rng.uniform(-22.31, -14.55)),
            "adam_wd": np.exp(rng.uniform(-14.83, -12.71)),
            "max_lr": np.exp(rng.uniform(-8, -5.2)),
            "cycle_peak": rng.uniform(0.41, 0.48),
        },
        "lae": {
            "adam_beta_1": np.exp(rng.uniform(-4.22, -2.18)),
            "adam_beta_2": np.exp(rng.uniform(-11.39, -7.2)),
            "adam_eps": np.exp(rng.uniform(-21.88, -21.16)),
            "adam_wd": np.exp(rng.uniform(-15.59, -8.36)),
            "max_lr": np.exp(rng.uniform(-8, -5.42)),
            "cycle_peak": rng.uniform(0.19, 0.26),
        },
        "signed_geomean": {
            "adam_beta_1": np.exp(rng.uniform(-5.44, -2.55)),
            "adam_beta_2": np.exp(rng.uniform(-13.61, -6.29)),
            "adam_eps": np.exp(rng.uniform(-21.09, -15.74)),
            "adam_wd": np.exp(rng.uniform(-12.37, -9.64)),
            "max_lr": np.exp(rng.uniform(-8, -5.39)),
            "cycle_peak": rng.uniform(0.26, 0.42),
        },
        "linf": {
            "adam_beta_1": np.exp(rng.uniform(-5.27, -3.68)),
            "adam_beta_2": np.exp(rng.uniform(-11.32, -6.68)),
            "adam_eps": np.exp(rng.uniform(-20.66, -15.74)),
            "adam_wd": np.exp(rng.uniform(-12.93, -9.8)),
            "max_lr": np.exp(rng.uniform(-8, -5.48)),
            "cycle_peak": rng.uniform(0.2, 0.39),
        },
        "swishk": {
            "adam_beta_1": np.exp(rng.uniform(-2.25, -0.89)),
            "adam_beta_2": np.exp(rng.uniform(-10.3, -6.3)),
            "adam_eps": np.exp(rng.uniform(-19.21, -16.49)),
            "adam_wd": np.exp(rng.uniform(-15.05, -10.69)),
            "max_lr": np.exp(rng.uniform(-8, -5.75)),
            "cycle_peak": rng.uniform(0.33, 0.39),
        },
        "lse": {
            "adam_beta_1": np.exp(rng.uniform(-5.18, -2.51)),
            "adam_beta_2": np.exp(rng.uniform(-7.43, -6.74)),
            "adam_eps": np.exp(rng.uniform(-21.41, -19.29)),
            "adam_wd": np.exp(rng.uniform(-15.64, -9.16)),
            "max_lr": np.exp(rng.uniform(-8, -5.09)),
            "cycle_peak": rng.uniform(0.09, 0.57),
        },
        "min": {
            "adam_beta_1": np.exp(rng.uniform(-4.62, -4.22)),
            "adam_beta_2": np.exp(rng.uniform(-9.24, -8.03)),
            "adam_eps": np.exp(rng.uniform(-22.22, -19.01)),
            "adam_wd": np.exp(rng.uniform(-13.57, -9.4)),
            "max_lr": np.exp(rng.uniform(-8, -5.37)),
            "cycle_peak": rng.uniform(0.15, 0.36),
        },
    }


# Opt
def cnn_cifar100(rng):
    return {
        "relu": {"adam_beta_1": np.exp(-2.426797853932341),
                 "adam_beta_2": np.exp(-8.32944462067869),
                 "adam_eps": np.exp(-19.791364579217475),
                 "adam_wd": np.exp(-11.772470713882507),
                 "max_lr": np.exp(-7.267477071254713),
                 "cycle_peak": 0.4517569495205036
                 },
        "multi_relu": {"adam_beta_1": np.exp(-1.9834923464612166),
                       "adam_beta_2": np.exp(-5.558187320969269),
                       "adam_eps": np.exp(-20.847973902813152),
                       "adam_wd": np.exp(-11.72610495446386),
                       "max_lr": np.exp(-7.177889555045069),
                       "cycle_peak": 0.36399876953225746
                       },
        "combinact": {"adam_beta_1": np.exp(-1.90329956854611),
                      "adam_beta_2": np.exp(-7.286469824634688),
                      "adam_eps": np.exp(-19.72445941906418),
                      "adam_wd": np.exp(-10.818233549453154),
                      "max_lr": np.exp(-6.861297361914738),
                      "cycle_peak": 0.5659379474281131
                      },
        "l2": {"adam_beta_1": np.exp(-1.8662979339075287),
               "adam_beta_2": np.exp(-4.588487764348233),
               "adam_eps": np.exp(-16.502805171408045),
               "adam_wd": np.exp(-10.825735290142346),
               "max_lr": np.exp(-7.23765587612481),
               "cycle_peak": 0.4491990506275296
               },
        "abs": {"adam_beta_1": np.exp(-2.4807814370731145),
                "adam_beta_2": np.exp(-7.619981735822295),
                "adam_eps": np.exp(-18.931867256862652),
                "adam_wd": np.exp(-11.812467208793322),
                "max_lr": np.exp(-7.195658475528992),
                "cycle_peak": 0.44128128173478703
                },
        "l2_lae": {"adam_beta_1": np.exp(-1.8490078448379565),
                   "adam_beta_2": np.exp(-5.281849941263149),
                   "adam_eps": np.exp(-17.490838571636928),
                   "adam_wd": np.exp(-11.897886419488167),
                   "max_lr": np.exp(-7.020510360640074),
                   "cycle_peak": 0.43013832410896696
                   },
        "max": {"adam_beta_1": np.exp(-2.7994828802749576),
                "adam_beta_2": np.exp(-5.369720801695676),
                "adam_eps": np.exp(-17.285952081693686),
                "adam_wd": np.exp(-8.600017225696668),
                "max_lr": np.exp(-6.220972625072611),
                "cycle_peak": 0.41433149467346075
                },
        "prod": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -9)),
                 "max_lr": np.exp(rng.uniform(-6, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "binary_ops_partition": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                                 "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                                 "adam_wd": np.exp(rng.uniform(-15, -9)),
                                 "max_lr": np.exp(rng.uniform(-6, -2)),
                                 "cycle_peak": rng.uniform(0.1, 0.5)
                                 },
        "binary_ops_all": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -9)),
                           "max_lr": np.exp(rng.uniform(-6, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "lae": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -9)),
                "max_lr": np.exp(rng.uniform(-6, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "signed_geomean": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -9)),
                           "max_lr": np.exp(rng.uniform(-6, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "linf": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -9)),
                 "max_lr": np.exp(rng.uniform(-6, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "swishk": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                   "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                   "adam_eps": np.exp(rng.uniform(-22, -15)),
                   "adam_wd": np.exp(rng.uniform(-15, -9)),
                   "max_lr": np.exp(rng.uniform(-6, -2)),
                   "cycle_peak": rng.uniform(0.1, 0.5)
                   },
        "lse": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -9)),
                "max_lr": np.exp(rng.uniform(-6, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "min": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -9)),
                "max_lr": np.exp(rng.uniform(-6, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
    }


def cnn_fashion_mnist(rng):
    return {
        "relu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -9)),
                 "max_lr": np.exp(rng.uniform(-6, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "abs": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -9)),
                "max_lr": np.exp(rng.uniform(-6, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "combinact": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -9)),
                      "max_lr": np.exp(rng.uniform(-6, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "max": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -9)),
                "max_lr": np.exp(rng.uniform(-6, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "min": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -9)),
                "max_lr": np.exp(rng.uniform(-6, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "l2": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
               "adam_beta_2": np.exp(rng.uniform(-12, -6)),
               "adam_eps": np.exp(rng.uniform(-22, -15)),
               "adam_wd": np.exp(rng.uniform(-15, -9)),
               "max_lr": np.exp(rng.uniform(-6, -2)),
               "cycle_peak": rng.uniform(0.1, 0.5)
               },
        "linf": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -9)),
                 "max_lr": np.exp(rng.uniform(-6, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "lse": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -9)),
                "max_lr": np.exp(rng.uniform(-6, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "lae": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -9)),
                "max_lr": np.exp(rng.uniform(-6, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "prod": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -9)),
                 "max_lr": np.exp(rng.uniform(-6, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "binary_ops_partition": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                                 "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                                 "adam_wd": np.exp(rng.uniform(-15, -9)),
                                 "max_lr": np.exp(rng.uniform(-6, -2)),
                                 "cycle_peak": rng.uniform(0.1, 0.5)
                                 },
        "binary_ops_all": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -9)),
                           "max_lr": np.exp(rng.uniform(-6, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "signed_geomean": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -9)),
                           "max_lr": np.exp(rng.uniform(-6, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "swishk": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                   "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                   "adam_eps": np.exp(rng.uniform(-22, -15)),
                   "adam_wd": np.exp(rng.uniform(-15, -9)),
                   "max_lr": np.exp(rng.uniform(-6, -2)),
                   "cycle_peak": rng.uniform(0.1, 0.5)
                   }
    }


def cnn_svhn(rng):
    return {
        "relu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -9)),
                 "max_lr": np.exp(rng.uniform(-6, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "abs": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -9)),
                "max_lr": np.exp(rng.uniform(-6, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "combinact": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -9)),
                      "max_lr": np.exp(rng.uniform(-6, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "max": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -9)),
                "max_lr": np.exp(rng.uniform(-6, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "min": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -9)),
                "max_lr": np.exp(rng.uniform(-6, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "l2": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
               "adam_beta_2": np.exp(rng.uniform(-12, -6)),
               "adam_eps": np.exp(rng.uniform(-22, -15)),
               "adam_wd": np.exp(rng.uniform(-15, -9)),
               "max_lr": np.exp(rng.uniform(-6, -2)),
               "cycle_peak": rng.uniform(0.1, 0.5)
               },
        "linf": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -9)),
                 "max_lr": np.exp(rng.uniform(-6, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "lse": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -9)),
                "max_lr": np.exp(rng.uniform(-6, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "lae": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -9)),
                "max_lr": np.exp(rng.uniform(-6, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "prod": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -9)),
                 "max_lr": np.exp(rng.uniform(-6, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "binary_ops_partition": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                                 "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                                 "adam_wd": np.exp(rng.uniform(-15, -9)),
                                 "max_lr": np.exp(rng.uniform(-6, -2)),
                                 "cycle_peak": rng.uniform(0.1, 0.5)
                                 },
        "binary_ops_all": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -9)),
                           "max_lr": np.exp(rng.uniform(-6, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "signed_geomean": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -9)),
                           "max_lr": np.exp(rng.uniform(-6, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "swishk": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                   "adam_beta_2": np.exp(rng.uniform(-12, -6)),
                   "adam_eps": np.exp(rng.uniform(-22, -15)),
                   "adam_wd": np.exp(rng.uniform(-15, -9)),
                   "max_lr": np.exp(rng.uniform(-6, -2)),
                   "cycle_peak": rng.uniform(0.1, 0.5)
                   }
    }
