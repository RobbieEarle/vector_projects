import numpy as np


def nn_mnist_p1(rng):
    return {
        "combinact": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "bin_partition_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "bin_partition_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                                 "max_lr": np.exp(rng.uniform(-8, -2)),
                                 "cycle_peak": rng.uniform(0.1, 0.5)
                                 },
        "bin_all_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                         "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                         "adam_eps": np.exp(rng.uniform(-22, -15)),
                         "adam_wd": np.exp(rng.uniform(-15, -8)),
                         "max_lr": np.exp(rng.uniform(-8, -2)),
                         "cycle_peak": rng.uniform(0.1, 0.5)
                         },
        "bin_all_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "bin_all_nopass_sgm": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "prod": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "lae": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -8)),
                "max_lr": np.exp(rng.uniform(-8, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "signed_geomean": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "linf": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "max": {
            "adam_beta_1": np.exp(-1.295),
            "adam_beta_2": np.exp(-5.391),
            "adam_eps": np.exp(-15.471),
            "adam_wd": np.exp(-10.631),
            "max_lr": np.exp(-5.736),
            "cycle_peak": 0.37,
        },
        "relu": {
            "adam_beta_1": np.exp(-1.741),
            "adam_beta_2": np.exp(-7.162),
            "adam_eps": np.exp(-17.665),
            "adam_wd": np.exp(-10.299),
            "max_lr": np.exp(-5.787),
            "cycle_peak": 0.41,
        },
        "swishk": {
            "adam_beta_1": np.exp(-1.325),
            "adam_beta_2": np.exp(-6.045),
            "adam_eps": np.exp(-18.538),
            "adam_wd": np.exp(-10.899),
            "max_lr": np.exp(-6.242),
            "cycle_peak": 0.19,
        },
        "l2": {
            "adam_beta_1": np.exp(-1.321),
            "adam_beta_2": np.exp(-4.642),
            "adam_eps": np.exp(-21.338),
            "adam_wd": np.exp(-12.083),
            "max_lr": np.exp(-5.395),
            "cycle_peak": 0.34,
        },

    }


def cnn_cifar10_p1(rng):
    return {

        "combinact": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "bin_partition_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "bin_partition_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                                 "max_lr": np.exp(rng.uniform(-8, -2)),
                                 "cycle_peak": rng.uniform(0.1, 0.5)
                                 },
        "bin_all_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                         "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                         "adam_eps": np.exp(rng.uniform(-22, -15)),
                         "adam_wd": np.exp(rng.uniform(-15, -8)),
                         "max_lr": np.exp(rng.uniform(-8, -2)),
                         "cycle_peak": rng.uniform(0.1, 0.5)
                         },
        "bin_all_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "bin_all_nopass_sgm": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "prod": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "lae": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -8)),
                "max_lr": np.exp(rng.uniform(-8, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "signed_geomean": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "linf": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "max": {
            "adam_beta_1": np.exp(-1.812),
            "adam_beta_2": np.exp(-4.103),
            "adam_eps": np.exp(-16.816),
            "adam_wd": np.exp(-7.803),
            "max_lr": np.exp(-5.05),
            "cycle_peak": 0.39,
        },
        "relu": {
            "adam_beta_1": np.exp(-1.234),
            "adam_beta_2": np.exp(-5.524),
            "adam_eps": np.exp(-16.858),
            "adam_wd": np.exp(-8.705),
            "max_lr": np.exp(-6.739),
            "cycle_peak": 0.32,
        },
        "swishk": {
            "adam_beta_1": np.exp(-1.225),
            "adam_beta_2": np.exp(-5.485),
            "adam_eps": np.exp(-19.281),
            "adam_wd": np.exp(-12.506),
            "max_lr": np.exp(-5.52),
            "cycle_peak": 0.35,
        },
        "l2": {
            "adam_beta_1": np.exp(-2.185),
            "adam_beta_2": np.exp(-5.677),
            "adam_eps": np.exp(-20.712),
            "adam_wd": np.exp(-11.513),
            "max_lr": np.exp(-5.954),
            "cycle_peak": 0.35,
        },
    }


def nn_mnist_p3(rng):
    return {
        "combinact": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "bin_partition_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "bin_partition_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                                 "max_lr": np.exp(rng.uniform(-8, -2)),
                                 "cycle_peak": rng.uniform(0.1, 0.5)
                                 },
        "bin_all_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                         "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                         "adam_eps": np.exp(rng.uniform(-22, -15)),
                         "adam_wd": np.exp(rng.uniform(-15, -8)),
                         "max_lr": np.exp(rng.uniform(-8, -2)),
                         "cycle_peak": rng.uniform(0.1, 0.5)
                         },
        "bin_all_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "bin_all_nopass_sgm": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "prod": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "lae": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -8)),
                "max_lr": np.exp(rng.uniform(-8, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "signed_geomean": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "linf": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "max": {
            "adam_beta_1": np.exp(-2.899),
            "adam_beta_2": np.exp(-4.953),
            "adam_eps": np.exp(-16.507),
            "adam_wd": np.exp(-14.509),
            "max_lr": np.exp(-5.308),
            "cycle_peak": 0.35,
        },
        "relu": {
            "adam_beta_1": np.exp(-2.505),
            "adam_beta_2": np.exp(-7.871),
            "adam_eps": np.exp(-17.011),
            "adam_wd": np.exp(-10.635),
            "max_lr": np.exp(-6.657),
            "cycle_peak": 0.26,
        },
        "swishk": {
            "adam_beta_1": np.exp(-0.074),
            "adam_beta_2": np.exp(-4.803),
            "adam_eps": np.exp(-18.742),
            "adam_wd": np.exp(-10.265),
            "max_lr": np.exp(-6.422),
            "cycle_peak": 0.11,
        },
        "l2": {
            "adam_beta_1": np.exp(-1.635),
            "adam_beta_2": np.exp(-6.421),
            "adam_eps": np.exp(-17.572),
            "adam_wd": np.exp(-12.192),
            "max_lr": np.exp(-5.405),
            "cycle_peak": 0.46,
        },
    }


def cnn_cifar10_p3(rng):
    return {
        "combinact": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "bin_partition_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "bin_partition_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                                 "max_lr": np.exp(rng.uniform(-8, -2)),
                                 "cycle_peak": rng.uniform(0.1, 0.5)
                                 },
        "bin_all_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                         "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                         "adam_eps": np.exp(rng.uniform(-22, -15)),
                         "adam_wd": np.exp(rng.uniform(-15, -8)),
                         "max_lr": np.exp(rng.uniform(-8, -2)),
                         "cycle_peak": rng.uniform(0.1, 0.5)
                         },
        "bin_all_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "bin_all_nopass_sgm": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "prod": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "lae": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -8)),
                "max_lr": np.exp(rng.uniform(-8, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "signed_geomean": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "linf": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "max": {
            "adam_beta_1": np.exp(-2.613),
            "adam_beta_2": np.exp(-3.864),
            "adam_eps": np.exp(-18.124),
            "adam_wd": np.exp(-6.322),
            "max_lr": np.exp(-5.747),
            "cycle_peak": 0.43,
        },
        "relu": {
            "adam_beta_1": np.exp(-1.811),
            "adam_beta_2": np.exp(-5.701),
            "adam_eps": np.exp(-17.196),
            "adam_wd": np.exp(-7.662),
            "max_lr": np.exp(-7.287),
            "cycle_peak": 0.27,
        },
        "swishk": {
            "adam_beta_1": np.exp(-0.639),
            "adam_beta_2": np.exp(-3.673),
            "adam_eps": np.exp(-17.955),
            "adam_wd": np.exp(-12.812),
            "max_lr": np.exp(-6.181),
            "cycle_peak": 0.37,
        },
        "l2": {
            "adam_beta_1": np.exp(-2.108),
            "adam_beta_2": np.exp(-6.211),
            "adam_eps": np.exp(-20.898),
            "adam_wd": np.exp(-15.037),
            "max_lr": np.exp(-6.114),
            "cycle_peak": 0.34,
        },
    }
