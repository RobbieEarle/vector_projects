import numpy as np


def nn_mnist_p1(rng):
    return {
        "relu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "combinact": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "l2": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
               "adam_eps": np.exp(rng.uniform(-22, -15)),
               "adam_wd": np.exp(rng.uniform(-15, -8)),
               "max_lr": np.exp(rng.uniform(-8, -2)),
               "cycle_peak": rng.uniform(0.1, 0.5)
               },
        "max": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -8)),
                "max_lr": np.exp(rng.uniform(-8, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "bin_partition_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "bin_partition_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                                 "max_lr": np.exp(rng.uniform(-8, -2)),
                                 "cycle_peak": rng.uniform(0.1, 0.5)
                                 },
        "bin_all_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                         "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                         "adam_eps": np.exp(rng.uniform(-22, -15)),
                         "adam_wd": np.exp(rng.uniform(-15, -8)),
                         "max_lr": np.exp(rng.uniform(-8, -2)),
                         "cycle_peak": rng.uniform(0.1, 0.5)
                         },
        "bin_all_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "bin_all_nopass_sgm": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "prod": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "lae": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -8)),
                "max_lr": np.exp(rng.uniform(-8, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "signed_geomean": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "linf": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "swishk": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                   "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                   "adam_eps": np.exp(rng.uniform(-22, -15)),
                   "adam_wd": np.exp(rng.uniform(-15, -8)),
                   "max_lr": np.exp(rng.uniform(-8, -2)),
                   "cycle_peak": rng.uniform(0.1, 0.5)
                   },

    }


def nn_cifar10_p1(rng):
    return {
        "relu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "combinact": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "l2": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
               "adam_eps": np.exp(rng.uniform(-22, -15)),
               "adam_wd": np.exp(rng.uniform(-15, -8)),
               "max_lr": np.exp(rng.uniform(-8, -2)),
               "cycle_peak": rng.uniform(0.1, 0.5)
               },
        "max": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -8)),
                "max_lr": np.exp(rng.uniform(-8, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "bin_partition_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "bin_partition_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                                 "max_lr": np.exp(rng.uniform(-8, -2)),
                                 "cycle_peak": rng.uniform(0.1, 0.5)
                                 },
        "bin_all_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                         "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                         "adam_eps": np.exp(rng.uniform(-22, -15)),
                         "adam_wd": np.exp(rng.uniform(-15, -8)),
                         "max_lr": np.exp(rng.uniform(-8, -2)),
                         "cycle_peak": rng.uniform(0.1, 0.5)
                         },
        "bin_all_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "bin_all_nopass_sgm": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "prod": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "lae": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -8)),
                "max_lr": np.exp(rng.uniform(-8, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "signed_geomean": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "linf": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "swishk": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                   "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                   "adam_eps": np.exp(rng.uniform(-22, -15)),
                   "adam_wd": np.exp(rng.uniform(-15, -8)),
                   "max_lr": np.exp(rng.uniform(-8, -2)),
                   "cycle_peak": rng.uniform(0.1, 0.5)
                   },
    }


def nn_cifar100_p1(rng):
    return {
        "relu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "combinact": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "l2": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
               "adam_eps": np.exp(rng.uniform(-22, -15)),
               "adam_wd": np.exp(rng.uniform(-15, -8)),
               "max_lr": np.exp(rng.uniform(-8, -2)),
               "cycle_peak": rng.uniform(0.1, 0.5)
               },
        "max": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -8)),
                "max_lr": np.exp(rng.uniform(-8, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "bin_partition_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "bin_partition_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                                 "max_lr": np.exp(rng.uniform(-8, -2)),
                                 "cycle_peak": rng.uniform(0.1, 0.5)
                                 },
        "bin_all_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                         "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                         "adam_eps": np.exp(rng.uniform(-22, -15)),
                         "adam_wd": np.exp(rng.uniform(-15, -8)),
                         "max_lr": np.exp(rng.uniform(-8, -2)),
                         "cycle_peak": rng.uniform(0.1, 0.5)
                         },
        "bin_all_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "bin_all_nopass_sgm": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "prod": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "lae": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -8)),
                "max_lr": np.exp(rng.uniform(-8, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "signed_geomean": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "linf": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "swishk": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                   "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                   "adam_eps": np.exp(rng.uniform(-22, -15)),
                   "adam_wd": np.exp(rng.uniform(-15, -8)),
                   "max_lr": np.exp(rng.uniform(-8, -2)),
                   "cycle_peak": rng.uniform(0.1, 0.5)
                   },
    }


def cnn_mnist_p1(rng):
    return {
        "relu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "combinact": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "l2": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
               "adam_eps": np.exp(rng.uniform(-22, -15)),
               "adam_wd": np.exp(rng.uniform(-15, -8)),
               "max_lr": np.exp(rng.uniform(-8, -2)),
               "cycle_peak": rng.uniform(0.1, 0.5)
               },
        "max": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -8)),
                "max_lr": np.exp(rng.uniform(-8, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "bin_partition_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "bin_partition_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                                 "max_lr": np.exp(rng.uniform(-8, -2)),
                                 "cycle_peak": rng.uniform(0.1, 0.5)
                                 },
        "bin_all_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                         "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                         "adam_eps": np.exp(rng.uniform(-22, -15)),
                         "adam_wd": np.exp(rng.uniform(-15, -8)),
                         "max_lr": np.exp(rng.uniform(-8, -2)),
                         "cycle_peak": rng.uniform(0.1, 0.5)
                         },
        "bin_all_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "bin_all_nopass_sgm": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "prod": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "lae": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -8)),
                "max_lr": np.exp(rng.uniform(-8, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "signed_geomean": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "linf": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "swishk": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                   "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                   "adam_eps": np.exp(rng.uniform(-22, -15)),
                   "adam_wd": np.exp(rng.uniform(-15, -8)),
                   "max_lr": np.exp(rng.uniform(-8, -2)),
                   "cycle_peak": rng.uniform(0.1, 0.5)
                   },
    }


def cnn_cifar10_p1(rng):
    return {
        "relu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "combinact": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "l2": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
               "adam_eps": np.exp(rng.uniform(-22, -15)),
               "adam_wd": np.exp(rng.uniform(-15, -8)),
               "max_lr": np.exp(rng.uniform(-8, -2)),
               "cycle_peak": rng.uniform(0.1, 0.5)
               },
        "max": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -8)),
                "max_lr": np.exp(rng.uniform(-8, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "bin_partition_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "bin_partition_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                                 "max_lr": np.exp(rng.uniform(-8, -2)),
                                 "cycle_peak": rng.uniform(0.1, 0.5)
                                 },
        "bin_all_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                         "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                         "adam_eps": np.exp(rng.uniform(-22, -15)),
                         "adam_wd": np.exp(rng.uniform(-15, -8)),
                         "max_lr": np.exp(rng.uniform(-8, -2)),
                         "cycle_peak": rng.uniform(0.1, 0.5)
                         },
        "bin_all_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "bin_all_nopass_sgm": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "prod": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "lae": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -8)),
                "max_lr": np.exp(rng.uniform(-8, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "signed_geomean": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "linf": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "swishk": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                   "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                   "adam_eps": np.exp(rng.uniform(-22, -15)),
                   "adam_wd": np.exp(rng.uniform(-15, -8)),
                   "max_lr": np.exp(rng.uniform(-8, -2)),
                   "cycle_peak": rng.uniform(0.1, 0.5)
                   },
    }


def cnn_cifar100_p1(rng):
    return {
        "relu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "combinact": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "l2": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
               "adam_eps": np.exp(rng.uniform(-22, -15)),
               "adam_wd": np.exp(rng.uniform(-15, -8)),
               "max_lr": np.exp(rng.uniform(-8, -2)),
               "cycle_peak": rng.uniform(0.1, 0.5)
               },
        "max": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -8)),
                "max_lr": np.exp(rng.uniform(-8, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "bin_partition_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "bin_partition_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                                 "max_lr": np.exp(rng.uniform(-8, -2)),
                                 "cycle_peak": rng.uniform(0.1, 0.5)
                                 },
        "bin_all_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                         "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                         "adam_eps": np.exp(rng.uniform(-22, -15)),
                         "adam_wd": np.exp(rng.uniform(-15, -8)),
                         "max_lr": np.exp(rng.uniform(-8, -2)),
                         "cycle_peak": rng.uniform(0.1, 0.5)
                         },
        "bin_all_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "bin_all_nopass_sgm": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "prod": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "lae": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -8)),
                "max_lr": np.exp(rng.uniform(-8, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "signed_geomean": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "linf": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "swishk": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                   "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                   "adam_eps": np.exp(rng.uniform(-22, -15)),
                   "adam_wd": np.exp(rng.uniform(-15, -8)),
                   "max_lr": np.exp(rng.uniform(-8, -2)),
                   "cycle_peak": rng.uniform(0.1, 0.5)
                   },
    }


def nn_mnist_p3(rng):
    return {
        "relu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "combinact": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "l2": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
               "adam_eps": np.exp(rng.uniform(-22, -15)),
               "adam_wd": np.exp(rng.uniform(-15, -8)),
               "max_lr": np.exp(rng.uniform(-8, -2)),
               "cycle_peak": rng.uniform(0.1, 0.5)
               },
        "max": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -8)),
                "max_lr": np.exp(rng.uniform(-8, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "bin_partition_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "bin_partition_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                                 "max_lr": np.exp(rng.uniform(-8, -2)),
                                 "cycle_peak": rng.uniform(0.1, 0.5)
                                 },
        "bin_all_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                         "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                         "adam_eps": np.exp(rng.uniform(-22, -15)),
                         "adam_wd": np.exp(rng.uniform(-15, -8)),
                         "max_lr": np.exp(rng.uniform(-8, -2)),
                         "cycle_peak": rng.uniform(0.1, 0.5)
                         },
        "bin_all_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "bin_all_nopass_sgm": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "prod": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "lae": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -8)),
                "max_lr": np.exp(rng.uniform(-8, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "signed_geomean": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "linf": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "swishk": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                   "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                   "adam_eps": np.exp(rng.uniform(-22, -15)),
                   "adam_wd": np.exp(rng.uniform(-15, -8)),
                   "max_lr": np.exp(rng.uniform(-8, -2)),
                   "cycle_peak": rng.uniform(0.1, 0.5)
                   },

    }


def nn_cifar10_p3(rng):
    return {
        "relu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "combinact": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "l2": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
               "adam_eps": np.exp(rng.uniform(-22, -15)),
               "adam_wd": np.exp(rng.uniform(-15, -8)),
               "max_lr": np.exp(rng.uniform(-8, -2)),
               "cycle_peak": rng.uniform(0.1, 0.5)
               },
        "max": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -8)),
                "max_lr": np.exp(rng.uniform(-8, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "bin_partition_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "bin_partition_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                                 "max_lr": np.exp(rng.uniform(-8, -2)),
                                 "cycle_peak": rng.uniform(0.1, 0.5)
                                 },
        "bin_all_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                         "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                         "adam_eps": np.exp(rng.uniform(-22, -15)),
                         "adam_wd": np.exp(rng.uniform(-15, -8)),
                         "max_lr": np.exp(rng.uniform(-8, -2)),
                         "cycle_peak": rng.uniform(0.1, 0.5)
                         },
        "bin_all_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "bin_all_nopass_sgm": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "prod": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "lae": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -8)),
                "max_lr": np.exp(rng.uniform(-8, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "signed_geomean": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "linf": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "swishk": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                   "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                   "adam_eps": np.exp(rng.uniform(-22, -15)),
                   "adam_wd": np.exp(rng.uniform(-15, -8)),
                   "max_lr": np.exp(rng.uniform(-8, -2)),
                   "cycle_peak": rng.uniform(0.1, 0.5)
                   },
    }


def nn_cifar100_p3(rng):
    return {
        "relu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "combinact": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "l2": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
               "adam_eps": np.exp(rng.uniform(-22, -15)),
               "adam_wd": np.exp(rng.uniform(-15, -8)),
               "max_lr": np.exp(rng.uniform(-8, -2)),
               "cycle_peak": rng.uniform(0.1, 0.5)
               },
        "max": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -8)),
                "max_lr": np.exp(rng.uniform(-8, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "bin_partition_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "bin_partition_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                                 "max_lr": np.exp(rng.uniform(-8, -2)),
                                 "cycle_peak": rng.uniform(0.1, 0.5)
                                 },
        "bin_all_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                         "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                         "adam_eps": np.exp(rng.uniform(-22, -15)),
                         "adam_wd": np.exp(rng.uniform(-15, -8)),
                         "max_lr": np.exp(rng.uniform(-8, -2)),
                         "cycle_peak": rng.uniform(0.1, 0.5)
                         },
        "bin_all_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "bin_all_nopass_sgm": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "prod": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "lae": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -8)),
                "max_lr": np.exp(rng.uniform(-8, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "signed_geomean": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "linf": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "swishk": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                   "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                   "adam_eps": np.exp(rng.uniform(-22, -15)),
                   "adam_wd": np.exp(rng.uniform(-15, -8)),
                   "max_lr": np.exp(rng.uniform(-8, -2)),
                   "cycle_peak": rng.uniform(0.1, 0.5)
                   },
    }


def cnn_mnist_p3(rng):
    return {
        "relu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "combinact": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "l2": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
               "adam_eps": np.exp(rng.uniform(-22, -15)),
               "adam_wd": np.exp(rng.uniform(-15, -8)),
               "max_lr": np.exp(rng.uniform(-8, -2)),
               "cycle_peak": rng.uniform(0.1, 0.5)
               },
        "max": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -8)),
                "max_lr": np.exp(rng.uniform(-8, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "bin_partition_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "bin_partition_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                                 "max_lr": np.exp(rng.uniform(-8, -2)),
                                 "cycle_peak": rng.uniform(0.1, 0.5)
                                 },
        "bin_all_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                         "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                         "adam_eps": np.exp(rng.uniform(-22, -15)),
                         "adam_wd": np.exp(rng.uniform(-15, -8)),
                         "max_lr": np.exp(rng.uniform(-8, -2)),
                         "cycle_peak": rng.uniform(0.1, 0.5)
                         },
        "bin_all_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "bin_all_nopass_sgm": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "prod": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "lae": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -8)),
                "max_lr": np.exp(rng.uniform(-8, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "signed_geomean": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "linf": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "swishk": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                   "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                   "adam_eps": np.exp(rng.uniform(-22, -15)),
                   "adam_wd": np.exp(rng.uniform(-15, -8)),
                   "max_lr": np.exp(rng.uniform(-8, -2)),
                   "cycle_peak": rng.uniform(0.1, 0.5)
                   },
    }


def cnn_cifar10_p3(rng):
    return {
        "relu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "combinact": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "l2": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
               "adam_eps": np.exp(rng.uniform(-22, -15)),
               "adam_wd": np.exp(rng.uniform(-15, -8)),
               "max_lr": np.exp(rng.uniform(-8, -2)),
               "cycle_peak": rng.uniform(0.1, 0.5)
               },
        "max": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -8)),
                "max_lr": np.exp(rng.uniform(-8, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "bin_partition_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "bin_partition_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                                 "max_lr": np.exp(rng.uniform(-8, -2)),
                                 "cycle_peak": rng.uniform(0.1, 0.5)
                                 },
        "bin_all_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                         "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                         "adam_eps": np.exp(rng.uniform(-22, -15)),
                         "adam_wd": np.exp(rng.uniform(-15, -8)),
                         "max_lr": np.exp(rng.uniform(-8, -2)),
                         "cycle_peak": rng.uniform(0.1, 0.5)
                         },
        "bin_all_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "bin_all_nopass_sgm": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "prod": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "lae": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -8)),
                "max_lr": np.exp(rng.uniform(-8, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "signed_geomean": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "linf": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "swishk": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                   "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                   "adam_eps": np.exp(rng.uniform(-22, -15)),
                   "adam_wd": np.exp(rng.uniform(-15, -8)),
                   "max_lr": np.exp(rng.uniform(-8, -2)),
                   "cycle_peak": rng.uniform(0.1, 0.5)
                   },
    }


def cnn_cifar100_p3(rng):
    return {
        "relu": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "combinact": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                      "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                      "adam_eps": np.exp(rng.uniform(-22, -15)),
                      "adam_wd": np.exp(rng.uniform(-15, -8)),
                      "max_lr": np.exp(rng.uniform(-8, -2)),
                      "cycle_peak": rng.uniform(0.1, 0.5)
                      },
        "l2": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
               "adam_eps": np.exp(rng.uniform(-22, -15)),
               "adam_wd": np.exp(rng.uniform(-15, -8)),
               "max_lr": np.exp(rng.uniform(-8, -2)),
               "cycle_peak": rng.uniform(0.1, 0.5)
               },
        "max": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -8)),
                "max_lr": np.exp(rng.uniform(-8, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "bin_partition_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "bin_partition_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                                 "max_lr": np.exp(rng.uniform(-8, -2)),
                                 "cycle_peak": rng.uniform(0.1, 0.5)
                                 },
        "bin_all_full": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                         "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                         "adam_eps": np.exp(rng.uniform(-22, -15)),
                         "adam_wd": np.exp(rng.uniform(-15, -8)),
                         "max_lr": np.exp(rng.uniform(-8, -2)),
                         "cycle_peak": rng.uniform(0.1, 0.5)
                         },
        "bin_all_nopass": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "bin_all_nopass_sgm": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                               "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                               "adam_eps": np.exp(rng.uniform(-22, -15)),
                               "adam_wd": np.exp(rng.uniform(-15, -8)),
                               "max_lr": np.exp(rng.uniform(-8, -2)),
                               "cycle_peak": rng.uniform(0.1, 0.5)
                               },
        "prod": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "lae": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                "adam_eps": np.exp(rng.uniform(-22, -15)),
                "adam_wd": np.exp(rng.uniform(-15, -8)),
                "max_lr": np.exp(rng.uniform(-8, -2)),
                "cycle_peak": rng.uniform(0.1, 0.5)
                },
        "signed_geomean": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                           "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                           "adam_eps": np.exp(rng.uniform(-22, -15)),
                           "adam_wd": np.exp(rng.uniform(-15, -8)),
                           "max_lr": np.exp(rng.uniform(-8, -2)),
                           "cycle_peak": rng.uniform(0.1, 0.5)
                           },
        "linf": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                 "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                 "adam_eps": np.exp(rng.uniform(-22, -15)),
                 "adam_wd": np.exp(rng.uniform(-15, -8)),
                 "max_lr": np.exp(rng.uniform(-8, -2)),
                 "cycle_peak": rng.uniform(0.1, 0.5)
                 },
        "swishk": {"adam_beta_1": np.exp(rng.uniform(-5, 0)),
                   "adam_beta_2": np.exp(rng.uniform(-12, -4)),
                   "adam_eps": np.exp(rng.uniform(-22, -15)),
                   "adam_wd": np.exp(rng.uniform(-15, -8)),
                   "max_lr": np.exp(rng.uniform(-8, -2)),
                   "cycle_peak": rng.uniform(0.1, 0.5)
                   },
    }
